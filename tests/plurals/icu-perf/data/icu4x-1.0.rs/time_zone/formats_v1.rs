// @generated
type DataStruct = < :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1Marker as :: icu_provider :: DataMarker > :: Yokeable ; pub static DATA : litemap :: LiteMap < & str , & DataStruct , & [(& str , & DataStruct)] > = litemap :: LiteMap :: from_sorted_store_unchecked (& [("af" , AF_AF_NA) , ("af-NA" , AF_AF_NA) , ("agq" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ak" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("am" , AM) , ("ar" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-AE" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-BH" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-DJ" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-DZ" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-EG" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-EH" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-ER" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-IL" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-IQ" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-JO" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-KM" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-KW" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-LB" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-LY" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-MA" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-MR" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-OM" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-PS" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-QA" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-SA" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-SD" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-SO" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-SS" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-SY" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-TD" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-TN" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-YE" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("as" , AS) , ("asa" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ast" , AST) , ("az" , AZ_AZ_LATN) , ("az-Cyrl" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("az-Latn" , AZ_AZ_LATN) , ("bas" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("be" , BE_BE_TARASK) , ("be-tarask" , BE_BE_TARASK) , ("bem" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("bez" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("bg" , BG) , ("bm" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("bn" , BN_BN_IN) , ("bn-IN" , BN_BN_IN) , ("bo" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("bo-IN" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("br" , BR) , ("brx" , BRX) , ("bs" , BS_BS_LATN) , ("bs-Cyrl" , BS_CYRL) , ("bs-Latn" , BS_BS_LATN) , ("ca" , CA_CA_AD_CA_ES_VALENCIA_CA_FR_CA_IT) , ("ca-AD" , CA_CA_AD_CA_ES_VALENCIA_CA_FR_CA_IT) , ("ca-ES-valencia" , CA_CA_AD_CA_ES_VALENCIA_CA_FR_CA_IT) , ("ca-FR" , CA_CA_AD_CA_ES_VALENCIA_CA_FR_CA_IT) , ("ca-IT" , CA_CA_AD_CA_ES_VALENCIA_CA_FR_CA_IT) , ("ccp" , CCP_CCP_IN) , ("ccp-IN" , CCP_CCP_IN) , ("ce" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ceb" , CEB) , ("cgg" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("chr" , CHR) , ("ckb" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ckb-IR" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("cs" , CS) , ("cy" , CY) , ("da" , DA_DA_GL) , ("da-GL" , DA_DA_GL) , ("dav" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("de" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-AT" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-BE" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-CH" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-IT" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-LI" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-LU" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("dje" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("doi" , DOI) , ("dsb" , DSB) , ("dua" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("dyo" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("dz" , DZ) , ("ebu" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ee" , EE_EE_TG) , ("ee-TG" , EE_EE_TG) , ("el" , EL_EL_CY) , ("el-CY" , EL_EL_CY) , ("en" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-001" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-150" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-AE" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-AG" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-AI" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-AS" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-AT" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-AU" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-BB" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-BE" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-BI" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-BM" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-BS" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-BW" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-BZ" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-CA" , EN_CA) , ("en-CC" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-CH" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-CK" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-CM" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-CX" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-CY" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-DE" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-DG" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-DK" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-DM" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-ER" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-FI" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-FJ" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-FK" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-FM" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-GB" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-GD" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-GG" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-GH" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-GI" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-GM" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-GU" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-GY" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-HK" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-IE" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-IL" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-IM" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-IN" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-IO" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-JE" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-JM" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-KE" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-KI" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-KN" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-KY" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-LC" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-LR" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-LS" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-MG" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-MH" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-MO" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-MP" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-MS" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-MT" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-MU" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-MV" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-MW" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-MY" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-NA" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-NF" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-NG" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-NL" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-NR" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-NU" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-NZ" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-PG" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-PH" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-PK" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-PN" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-PR" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-PW" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-RW" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SB" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SC" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SD" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SE" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SG" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SH" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SI" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SL" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SS" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SX" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-SZ" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-TC" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-TK" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-TO" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-TT" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-TV" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-TZ" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-UG" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-UM" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-VC" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-VG" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-VI" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-VU" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-WS" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-ZA" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-ZM" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("en-ZW" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("eo" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("es" , ES_ES_EA_ES_GQ_ES_IC_ES_PH) , ("es-419" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-AR" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-BO" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-BR" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-BZ" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-CL" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-CO" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-CR" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-CU" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-DO" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-EA" , ES_ES_EA_ES_GQ_ES_IC_ES_PH) , ("es-EC" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-GQ" , ES_ES_EA_ES_GQ_ES_IC_ES_PH) , ("es-GT" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-HN" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-IC" , ES_ES_EA_ES_GQ_ES_IC_ES_PH) , ("es-MX" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-NI" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-PA" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-PE" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-PH" , ES_ES_EA_ES_GQ_ES_IC_ES_PH) , ("es-PR" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-PY" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-SV" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-US" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-UY" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("es-VE" , ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL) , ("et" , ET) , ("eu" , EU) , ("ewo" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("fa" , FA_FA_AF) , ("fa-AF" , FA_FA_AF) , ("ff" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Adlm" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-BF" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-CM" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-GH" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-GM" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-GW" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-LR" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-MR" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-NE" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-NG" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-SL" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Adlm-SN" , FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH) , ("ff-Latn" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-BF" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-CM" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-GH" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-GM" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-GN" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-GW" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-LR" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-MR" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-NE" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-NG" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ff-Latn-SL" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("fi" , FI) , ("fil" , FIL) , ("fo" , FO_FO_DK) , ("fo-DK" , FO_FO_DK) , ("fr" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-BE" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-BF" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-BI" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-BJ" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-BL" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-CA" , FR_CA) , ("fr-CD" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-CF" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-CG" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-CH" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-CI" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-CM" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-DJ" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-DZ" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-GA" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-GF" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-GN" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-GP" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-GQ" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-HT" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-KM" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-LU" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-MA" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-MC" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-MF" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-MG" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-ML" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-MQ" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-MR" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-MU" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-NC" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-NE" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-PF" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-PM" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-RE" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-RW" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-SC" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-SN" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-SY" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-TD" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-TG" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-TN" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-VU" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-WF" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fr-YT" , FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD) , ("fur" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("fy" , FY) , ("ga" , GA_GA_GB) , ("ga-GB" , GA_GA_GB) , ("gd" , GD) , ("gl" , GL) , ("gsw" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("gsw-FR" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("gsw-LI" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("gu" , GU) , ("guz" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("gv" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ha" , HA_HA_GH_HA_NE) , ("ha-GH" , HA_HA_GH_HA_NE) , ("ha-NE" , HA_HA_GH_HA_NE) , ("haw" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("he" , HE) , ("hi" , HI_MAI) , ("hi-Latn" , EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS) , ("hr" , HR_HR_BA) , ("hr-BA" , HR_HR_BA) , ("hsb" , HSB) , ("hu" , HU) , ("hy" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ia" , IA) , ("id" , ID) , ("ig" , IG) , ("ii" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("is" , IS) , ("it" , IT_IT_CH_IT_SM_IT_VA) , ("it-CH" , IT_IT_CH_IT_SM_IT_VA) , ("it-SM" , IT_IT_CH_IT_SM_IT_VA) , ("it-VA" , IT_IT_CH_IT_SM_IT_VA) , ("ja" , JA) , ("jgo" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("jmc" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("jv" , JV) , ("ka" , KA) , ("kab" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("kam" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("kde" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("kea" , KEA) , ("kgp" , KGP) , ("khq" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ki" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("kk" , KK) , ("kkj" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("kl" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("kln" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("km" , KM) , ("kn" , KN) , ("ko" , KO_KO_KP) , ("ko-KP" , KO_KO_KP) , ("kok" , KOK) , ("ks" , KS_KS_ARAB) , ("ks-Arab" , KS_KS_ARAB) , ("ks-Deva" , KS_DEVA) , ("ksb" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ksf" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ksh" , KSH) , ("ku" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("kw" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ky" , KY) , ("lag" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("lb" , LB) , ("lg" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("lkt" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ln" , LN_LN_AO_LN_CF_LN_CG) , ("ln-AO" , LN_LN_AO_LN_CF_LN_CG) , ("ln-CF" , LN_LN_AO_LN_CF_LN_CG) , ("ln-CG" , LN_LN_AO_LN_CF_LN_CG) , ("lo" , LO) , ("lrc" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("lrc-IQ" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("lt" , LT) , ("lu" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("luo" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("luy" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("lv" , LV) , ("mai" , HI_MAI) , ("mas" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("mas-TZ" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("mer" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("mfe" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("mg" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("mgh" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("mgo" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("mi" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("mk" , MK) , ("ml" , ML) , ("mn" , MN) , ("mni" , MNI_MNI_BENG) , ("mni-Beng" , MNI_MNI_BENG) , ("mr" , MR) , ("ms" , MS_MS_BN_MS_SG) , ("ms-BN" , MS_MS_BN_MS_SG) , ("ms-ID" , MS_ID) , ("ms-SG" , MS_MS_BN_MS_SG) , ("mt" , MT) , ("mua" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("my" , MY) , ("mzn" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("naq" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("nb" , NB_NB_SJ_NO) , ("nb-SJ" , NB_NB_SJ_NO) , ("nd" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("nds" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("nds-NL" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ne" , NE_NE_IN) , ("ne-IN" , NE_NE_IN) , ("nl" , NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SR_NL_SX) , ("nl-AW" , NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SR_NL_SX) , ("nl-BE" , NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SR_NL_SX) , ("nl-BQ" , NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SR_NL_SX) , ("nl-CW" , NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SR_NL_SX) , ("nl-SR" , NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SR_NL_SX) , ("nl-SX" , NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SR_NL_SX) , ("nmg" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("nn" , NN) , ("nnh" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("no" , NB_NB_SJ_NO) , ("nus" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("nyn" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("om" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("om-KE" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("or" , OR) , ("os" , OS_OS_RU) , ("os-RU" , OS_OS_RU) , ("pa" , PA_PA_GURU) , ("pa-Arab" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("pa-Guru" , PA_PA_GURU) , ("pcm" , PCM) , ("pl" , PL) , ("ps" , PS_PS_PK) , ("ps-PK" , PS_PS_PK) , ("pt" , PT) , ("pt-AO" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("pt-CH" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("pt-CV" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("pt-GQ" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("pt-GW" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("pt-LU" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("pt-MO" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("pt-MZ" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("pt-PT" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("pt-ST" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("pt-TL" , PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU) , ("qu" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("qu-BO" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("qu-EC" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("rm" , RM) , ("rn" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ro" , RO_RO_MD) , ("ro-MD" , RO_RO_MD) , ("rof" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ru" , RU_RU_BY_RU_KG_RU_KZ_RU_MD_RU_UA) , ("ru-BY" , RU_RU_BY_RU_KG_RU_KZ_RU_MD_RU_UA) , ("ru-KG" , RU_RU_BY_RU_KG_RU_KZ_RU_MD_RU_UA) , ("ru-KZ" , RU_RU_BY_RU_KG_RU_KZ_RU_MD_RU_UA) , ("ru-MD" , RU_RU_BY_RU_KG_RU_KZ_RU_MD_RU_UA) , ("ru-UA" , RU_RU_BY_RU_KG_RU_KZ_RU_MD_RU_UA) , ("rw" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("rwk" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("sa" , SA) , ("sah" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("saq" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("sat" , SAT_SAT_OLCK) , ("sat-Olck" , SAT_SAT_OLCK) , ("sbp" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("sc" , SC) , ("sd" , SD_SD_ARAB) , ("sd-Arab" , SD_SD_ARAB) , ("sd-Deva" , SD_DEVA) , ("se" , SE_SE_SE) , ("se-FI" , SE_FI) , ("se-SE" , SE_SE_SE) , ("seh" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ses" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("sg" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("shi" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("shi-Latn" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("shi-Tfng" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("si" , SI) , ("sk" , SK) , ("sl" , SL) , ("smn" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("sn" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("so" , SO_SO_DJ_SO_ET_SO_KE) , ("so-DJ" , SO_SO_DJ_SO_ET_SO_KE) , ("so-ET" , SO_SO_DJ_SO_ET_SO_KE) , ("so-KE" , SO_SO_DJ_SO_ET_SO_KE) , ("sq" , SQ_SQ_MK_SQ_XK) , ("sq-MK" , SQ_SQ_MK_SQ_XK) , ("sq-XK" , SQ_SQ_MK_SQ_XK) , ("sr" , SR_SR_CYRL_SR_CYRL_ME_SR_CYRL_XK) , ("sr-Cyrl" , SR_SR_CYRL_SR_CYRL_ME_SR_CYRL_XK) , ("sr-Cyrl-BA" , SR_CYRL_BA) , ("sr-Cyrl-ME" , SR_SR_CYRL_SR_CYRL_ME_SR_CYRL_XK) , ("sr-Cyrl-XK" , SR_SR_CYRL_SR_CYRL_ME_SR_CYRL_XK) , ("sr-Latn" , SR_LATN_SR_LATN_ME_SR_LATN_XK) , ("sr-Latn-BA" , SR_LATN_BA) , ("sr-Latn-ME" , SR_LATN_SR_LATN_ME_SR_LATN_XK) , ("sr-Latn-XK" , SR_LATN_SR_LATN_ME_SR_LATN_XK) , ("su" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("su-Latn" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("sv" , SV_SV_AX_SV_FI) , ("sv-AX" , SV_SV_AX_SV_FI) , ("sv-FI" , SV_SV_AX_SV_FI) , ("sw" , SW_SW_CD_SW_KE_SW_UG) , ("sw-CD" , SW_SW_CD_SW_KE_SW_UG) , ("sw-KE" , SW_SW_CD_SW_KE_SW_UG) , ("sw-UG" , SW_SW_CD_SW_KE_SW_UG) , ("ta" , TA_TA_LK_TA_MY_TA_SG) , ("ta-LK" , TA_TA_LK_TA_MY_TA_SG) , ("ta-MY" , TA_TA_LK_TA_MY_TA_SG) , ("ta-SG" , TA_TA_LK_TA_MY_TA_SG) , ("te" , TE) , ("teo" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("teo-KE" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("tg" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("th" , TH) , ("ti" , TI_TI_ER) , ("ti-ER" , TI_TI_ER) , ("tk" , TK) , ("to" , TO) , ("tr" , TR_TR_CY) , ("tr-CY" , TR_TR_CY) , ("tt" , TT) , ("twq" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("tzm" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ug" , UG) , ("uk" , UK) , ("und" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("ur" , UR) , ("ur-IN" , UR_IN) , ("uz" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("uz-Arab" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("uz-Cyrl" , UZ_CYRL) , ("uz-Latn" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("vai" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("vai-Latn" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("vai-Vaii" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("vi" , VI) , ("vun" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("wae" , WAE) , ("wo" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("xh" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("xog" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("yav" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("yi" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("yo" , YO) , ("yo-BJ" , YO_BJ) , ("yrl" , YRL_YRL_CO_YRL_VE) , ("yrl-CO" , YRL_YRL_CO_YRL_VE) , ("yrl-VE" , YRL_YRL_CO_YRL_VE) , ("yue" , YUE_YUE_HANT) , ("yue-Hans" , YUE_HANS) , ("yue-Hant" , YUE_YUE_HANT) , ("zgh" , AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO) , ("zh" , ZH_ZH_HANS_ZH_HANS_HK_ZH_HANS_MO_ZH_HANS_SG) , ("zh-Hans" , ZH_ZH_HANS_ZH_HANS_HK_ZH_HANS_MO_ZH_HANS_SG) , ("zh-Hans-HK" , ZH_ZH_HANS_ZH_HANS_HK_ZH_HANS_MO_ZH_HANS_SG) , ("zh-Hans-MO" , ZH_ZH_HANS_ZH_HANS_HK_ZH_HANS_MO_ZH_HANS_SG) , ("zh-Hans-SG" , ZH_ZH_HANS_ZH_HANS_HK_ZH_HANS_MO_ZH_HANS_SG) , ("zh-Hant" , ZH_HANT) , ("zh-Hant-HK" , ZH_HANT_HK_ZH_HANT_MO) , ("zh-Hant-MO" , ZH_HANT_HK_ZH_HANT_MO) , ("zu" , ZU)]) ; static AF_AF_NA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}-tyd") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 123u8 , 48u8 , 125u8 , 45u8 , 100u8 , 97u8 , 103u8 , 108u8 , 105u8 , 103u8 , 116u8 , 121u8 , 100u8 , 123u8 , 48u8 , 125u8 , 45u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 97u8 , 114u8 , 100u8 , 116u8 , 121u8 , 100u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static AGQ_AK_ASA_AZ_CYRL_BAS_BEM_BEZ_BM_BO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static AM : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HHmm") , alloc :: borrow :: Cow :: Borrowed ("-HHmm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("ጂ ኤም ቲ{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("ጂ ኤም ቲ") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} ጊዜ") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 36u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 225u8 , 139u8 , 168u8 , 225u8 , 137u8 , 128u8 , 225u8 , 138u8 , 149u8 , 32u8 , 225u8 , 137u8 , 165u8 , 225u8 , 136u8 , 173u8 , 225u8 , 136u8 , 131u8 , 225u8 , 138u8 , 149u8 , 32u8 , 225u8 , 136u8 , 176u8 , 225u8 , 139u8 , 147u8 , 225u8 , 137u8 , 181u8 , 123u8 , 48u8 , 125u8 , 32u8 , 225u8 , 136u8 , 152u8 , 225u8 , 139u8 , 176u8 , 225u8 , 137u8 , 160u8 , 225u8 , 138u8 , 155u8 , 32u8 , 225u8 , 136u8 , 176u8 , 225u8 , 139u8 , 147u8 , 225u8 , 137u8 , 181u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("غرينتش{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("غرينتش") , region_format : alloc :: borrow :: Cow :: Borrowed ("توقيت {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 27u8 , 0u8 , 216u8 , 170u8 , 217u8 , 136u8 , 217u8 , 130u8 , 217u8 , 138u8 , 216u8 , 170u8 , 32u8 , 123u8 , 48u8 , 125u8 , 32u8 , 216u8 , 167u8 , 217u8 , 132u8 , 216u8 , 181u8 , 217u8 , 138u8 , 217u8 , 129u8 , 217u8 , 138u8 , 216u8 , 170u8 , 217u8 , 136u8 , 217u8 , 130u8 , 217u8 , 138u8 , 216u8 , 170u8 , 32u8 , 123u8 , 48u8 , 125u8 , 32u8 , 216u8 , 167u8 , 217u8 , 132u8 , 216u8 , 177u8 , 216u8 , 179u8 , 217u8 , 133u8 , 217u8 , 138u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static AS : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} সময\u{9bc}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 40u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 32u8 , 224u8 , 166u8 , 161u8 , 224u8 , 167u8 , 135u8 , 224u8 , 166u8 , 178u8 , 224u8 , 166u8 , 190u8 , 224u8 , 166u8 , 135u8 , 224u8 , 166u8 , 159u8 , 32u8 , 224u8 , 166u8 , 184u8 , 224u8 , 166u8 , 174u8 , 224u8 , 166u8 , 175u8 , 224u8 , 166u8 , 188u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8 , 32u8 , 224u8 , 166u8 , 174u8 , 224u8 , 166u8 , 190u8 , 224u8 , 166u8 , 168u8 , 32u8 , 224u8 , 166u8 , 184u8 , 224u8 , 166u8 , 174u8 , 224u8 , 166u8 , 175u8 , 224u8 , 166u8 , 188u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static AST : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Hora de {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 72u8 , 111u8 , 114u8 , 97u8 , 32u8 , 98u8 , 114u8 , 97u8 , 110u8 , 105u8 , 101u8 , 103u8 , 97u8 , 32u8 , 100u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8 , 72u8 , 111u8 , 114u8 , 97u8 , 32u8 , 101u8 , 115u8 , 116u8 , 195u8 , 161u8 , 110u8 , 100u8 , 97u8 , 114u8 , 32u8 , 100u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static AZ_AZ_LATN : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} Vaxtı") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 89u8 , 97u8 , 121u8 , 32u8 , 86u8 , 97u8 , 120u8 , 116u8 , 196u8 , 177u8 , 123u8 , 48u8 , 125u8 , 32u8 , 83u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 116u8 , 32u8 , 86u8 , 97u8 , 120u8 , 116u8 , 196u8 , 177u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static BE_BE_TARASK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Час: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 22u8 , 0u8 , 208u8 , 155u8 , 208u8 , 181u8 , 209u8 , 130u8 , 208u8 , 189u8 , 209u8 , 150u8 , 32u8 , 209u8 , 135u8 , 208u8 , 176u8 , 209u8 , 129u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 208u8 , 161u8 , 209u8 , 130u8 , 208u8 , 176u8 , 208u8 , 189u8 , 208u8 , 180u8 , 208u8 , 176u8 , 209u8 , 128u8 , 209u8 , 130u8 , 208u8 , 189u8 , 209u8 , 139u8 , 32u8 , 209u8 , 135u8 , 208u8 , 176u8 , 209u8 , 129u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static BG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("Гринуич{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("Гринуич") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 42u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 226u8 , 128u8 , 147u8 , 32u8 , 208u8 , 187u8 , 209u8 , 143u8 , 209u8 , 130u8 , 208u8 , 189u8 , 208u8 , 190u8 , 32u8 , 209u8 , 135u8 , 208u8 , 176u8 , 209u8 , 129u8 , 208u8 , 190u8 , 208u8 , 178u8 , 208u8 , 190u8 , 32u8 , 208u8 , 178u8 , 209u8 , 128u8 , 208u8 , 181u8 , 208u8 , 188u8 , 208u8 , 181u8 , 123u8 , 48u8 , 125u8 , 32u8 , 226u8 , 128u8 , 147u8 , 32u8 , 209u8 , 129u8 , 209u8 , 130u8 , 208u8 , 176u8 , 208u8 , 189u8 , 208u8 , 180u8 , 208u8 , 176u8 , 209u8 , 128u8 , 209u8 , 130u8 , 208u8 , 189u8 , 208u8 , 190u8 , 32u8 , 208u8 , 178u8 , 209u8 , 128u8 , 208u8 , 181u8 , 208u8 , 188u8 , 208u8 , 181u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static BN_BN_IN : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} সময\u{9bc}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 38u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 166u8 , 166u8 , 224u8 , 166u8 , 191u8 , 224u8 , 166u8 , 172u8 , 224u8 , 166u8 , 190u8 , 224u8 , 166u8 , 178u8 , 224u8 , 167u8 , 139u8 , 224u8 , 166u8 , 149u8 , 32u8 , 224u8 , 166u8 , 184u8 , 224u8 , 166u8 , 174u8 , 224u8 , 166u8 , 175u8 , 224u8 , 166u8 , 188u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 166u8 , 174u8 , 224u8 , 166u8 , 190u8 , 224u8 , 166u8 , 168u8 , 224u8 , 166u8 , 149u8 , 32u8 , 224u8 , 166u8 , 184u8 , 224u8 , 166u8 , 174u8 , 224u8 , 166u8 , 175u8 , 224u8 , 166u8 , 188u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static BR : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("eur {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 101u8 , 117u8 , 114u8 , 32u8 , 104u8 , 97u8 , 195u8 , 177u8 , 118u8 , 32u8 , 123u8 , 48u8 , 125u8 , 101u8 , 117u8 , 114u8 , 32u8 , 99u8 , 202u8 , 188u8 , 104u8 , 111u8 , 97u8 , 195u8 , 177u8 , 118u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static BRX : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("जि.एम.ति {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("जि.एम.ति") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} सम") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 26u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 168u8 , 224u8 , 164u8 , 168u8 , 224u8 , 164u8 , 191u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 164u8 , 174u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 165u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 150u8 , 224u8 , 165u8 , 139u8 , 224u8 , 164u8 , 134u8 , 224u8 , 164u8 , 176u8 , 224u8 , 164u8 , 191u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 164u8 , 174u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static BS_BS_LATN : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed (" -HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 108u8 , 106u8 , 101u8 , 116u8 , 110u8 , 111u8 , 32u8 , 118u8 , 114u8 , 105u8 , 106u8 , 101u8 , 109u8 , 101u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 110u8 , 111u8 , 32u8 , 118u8 , 114u8 , 105u8 , 106u8 , 101u8 , 109u8 , 101u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static BS_CYRL : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Време: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static CA_CA_AD_CA_ES_VALENCIA_CA_FR_CA_IT : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Hora de: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 72u8 , 111u8 , 114u8 , 97u8 , 32u8 , 100u8 , 226u8 , 128u8 , 153u8 , 101u8 , 115u8 , 116u8 , 105u8 , 117u8 , 44u8 , 32u8 , 123u8 , 48u8 , 125u8 , 72u8 , 111u8 , 114u8 , 97u8 , 32u8 , 101u8 , 115u8 , 116u8 , 195u8 , 160u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 44u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static CCP_CCP_IN : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} 𑄃\u{11127}𑄇\u{11134}𑄖\u{11127}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 73u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 240u8 , 145u8 , 132u8 , 152u8 , 240u8 , 145u8 , 132u8 , 168u8 , 240u8 , 145u8 , 132u8 , 157u8 , 240u8 , 145u8 , 132u8 , 170u8 , 240u8 , 145u8 , 132u8 , 140u8 , 240u8 , 145u8 , 132u8 , 180u8 , 240u8 , 145u8 , 132u8 , 142u8 , 240u8 , 145u8 , 132u8 , 179u8 , 240u8 , 145u8 , 132u8 , 160u8 , 32u8 , 240u8 , 145u8 , 132u8 , 131u8 , 240u8 , 145u8 , 132u8 , 167u8 , 240u8 , 145u8 , 132u8 , 135u8 , 240u8 , 145u8 , 132u8 , 180u8 , 240u8 , 145u8 , 132u8 , 150u8 , 240u8 , 145u8 , 132u8 , 167u8 , 240u8 , 145u8 , 132u8 , 150u8 , 240u8 , 145u8 , 132u8 , 180u8 , 123u8 , 48u8 , 125u8 , 32u8 , 240u8 , 145u8 , 132u8 , 159u8 , 240u8 , 145u8 , 132u8 , 154u8 , 240u8 , 145u8 , 132u8 , 167u8 , 240u8 , 145u8 , 132u8 , 135u8 , 240u8 , 145u8 , 132u8 , 180u8 , 32u8 , 240u8 , 145u8 , 132u8 , 131u8 , 240u8 , 145u8 , 132u8 , 167u8 , 240u8 , 145u8 , 132u8 , 135u8 , 240u8 , 145u8 , 132u8 , 180u8 , 240u8 , 145u8 , 132u8 , 150u8 , 240u8 , 145u8 , 132u8 , 167u8 , 240u8 , 145u8 , 132u8 , 150u8 , 240u8 , 145u8 , 132u8 , 180u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static CEB : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} Oras") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 79u8 , 114u8 , 97u8 , 115u8 , 32u8 , 115u8 , 97u8 , 32u8 , 84u8 , 97u8 , 103u8 , 45u8 , 105u8 , 110u8 , 105u8 , 116u8 , 123u8 , 48u8 , 125u8 , 32u8 , 84u8 , 97u8 , 109u8 , 100u8 , 97u8 , 110u8 , 97u8 , 110u8 , 103u8 , 32u8 , 79u8 , 114u8 , 97u8 , 115u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} {0}") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static CHR : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} ᎠᏟᎢᎵᏒ") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 33u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 225u8 , 142u8 , 170u8 , 225u8 , 142u8 , 175u8 , 32u8 , 225u8 , 142u8 , 162u8 , 225u8 , 142u8 , 166u8 , 32u8 , 225u8 , 142u8 , 160u8 , 225u8 , 143u8 , 159u8 , 225u8 , 142u8 , 162u8 , 225u8 , 142u8 , 181u8 , 225u8 , 143u8 , 146u8 , 123u8 , 48u8 , 125u8 , 32u8 , 225u8 , 142u8 , 160u8 , 225u8 , 143u8 , 159u8 , 225u8 , 142u8 , 182u8 , 225u8 , 143u8 , 141u8 , 225u8 , 143u8 , 151u8 , 32u8 , 225u8 , 142u8 , 160u8 , 225u8 , 143u8 , 159u8 , 225u8 , 142u8 , 162u8 , 225u8 , 142u8 , 181u8 , 225u8 , 143u8 , 146u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static CS : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+H:mm") , alloc :: borrow :: Cow :: Borrowed ("-H:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Časové pásmo {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static CY : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Amser {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 65u8 , 109u8 , 115u8 , 101u8 , 114u8 , 32u8 , 72u8 , 97u8 , 102u8 , 32u8 , 123u8 , 48u8 , 125u8 , 65u8 , 109u8 , 115u8 , 101u8 , 114u8 , 32u8 , 83u8 , 97u8 , 102u8 , 111u8 , 110u8 , 111u8 , 108u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static DA_DA_GL : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH.mm") , alloc :: borrow :: Cow :: Borrowed ("-HH.mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} Zeit") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 83u8 , 111u8 , 109u8 , 109u8 , 101u8 , 114u8 , 122u8 , 101u8 , 105u8 , 116u8 , 123u8 , 48u8 , 125u8 , 32u8 , 78u8 , 111u8 , 114u8 , 109u8 , 97u8 , 108u8 , 122u8 , 101u8 , 105u8 , 116u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static DOI : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} समा\u{902}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 35u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 161u8 , 224u8 , 165u8 , 135u8 , 224u8 , 164u8 , 178u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 135u8 , 224u8 , 164u8 , 159u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 130u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 168u8 , 224u8 , 164u8 , 149u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 130u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static DSB : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Casowe pasmo {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 18u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 108u8 , 196u8 , 155u8 , 197u8 , 155u8 , 111u8 , 106u8 , 115u8 , 107u8 , 105u8 , 32u8 , 99u8 , 97u8 , 115u8 , 123u8 , 48u8 , 125u8 , 32u8 , 122u8 , 121u8 , 109u8 , 115u8 , 107u8 , 105u8 , 32u8 , 99u8 , 97u8 , 115u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static DZ : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("ཇ\u{f72}་ཨ\u{f7a}མ་ཏ\u{f72}་{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("ཇ\u{f72}་ཨ\u{f7a}མ་ཊ\u{f72}་") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}་ཆ\u{f74}་ཚ\u{f7c}ད།") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1}། ({0}་)") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static EE_EE_TG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("{0} GMT") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} gaƒoƒo me") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 107u8 , 101u8 , 108u8 , 101u8 , 32u8 , 103u8 , 97u8 , 198u8 , 146u8 , 111u8 , 198u8 , 146u8 , 111u8 , 32u8 , 109u8 , 101u8 , 123u8 , 48u8 , 125u8 , 32u8 , 110u8 , 117u8 , 116u8 , 111u8 , 109u8 , 101u8 , 32u8 , 103u8 , 97u8 , 198u8 , 146u8 , 111u8 , 198u8 , 146u8 , 111u8 , 32u8 , 109u8 , 101u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static EL_EL_CY : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Ώρα ({0})") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 25u8 , 0u8 , 206u8 , 152u8 , 206u8 , 181u8 , 207u8 , 129u8 , 206u8 , 185u8 , 206u8 , 189u8 , 206u8 , 174u8 , 32u8 , 207u8 , 142u8 , 207u8 , 129u8 , 206u8 , 177u8 , 32u8 , 40u8 , 123u8 , 48u8 , 125u8 , 41u8 , 206u8 , 167u8 , 206u8 , 181u8 , 206u8 , 185u8 , 206u8 , 188u8 , 206u8 , 181u8 , 207u8 , 129u8 , 206u8 , 185u8 , 206u8 , 189u8 , 206u8 , 174u8 , 32u8 , 207u8 , 142u8 , 207u8 , 129u8 , 206u8 , 177u8 , 32u8 , 40u8 , 123u8 , 48u8 , 125u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("[{1} ({0})]") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static EN_CA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} Time") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 24u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 68u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 32u8 , 83u8 , 97u8 , 118u8 , 105u8 , 110u8 , 103u8 , 32u8 , 84u8 , 105u8 , 109u8 , 101u8 , 123u8 , 48u8 , 125u8 , 32u8 , 83u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 32u8 , 84u8 , 105u8 , 109u8 , 101u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static EN_EN_001_EN_150_EN_AE_EN_AG_EN_AI_EN_AS : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} Time") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 17u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 68u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 32u8 , 84u8 , 105u8 , 109u8 , 101u8 , 123u8 , 48u8 , 125u8 , 32u8 , 83u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 32u8 , 84u8 , 105u8 , 109u8 , 101u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static ES_419_ES_AR_ES_BO_ES_BR_ES_BZ_ES_CL : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("hora de {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 104u8 , 111u8 , 114u8 , 97u8 , 32u8 , 100u8 , 101u8 , 32u8 , 118u8 , 101u8 , 114u8 , 97u8 , 110u8 , 111u8 , 32u8 , 100u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8 , 104u8 , 111u8 , 114u8 , 97u8 , 32u8 , 101u8 , 115u8 , 116u8 , 195u8 , 161u8 , 110u8 , 100u8 , 97u8 , 114u8 , 32u8 , 100u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static ES_ES_EA_ES_GQ_ES_IC_ES_PH : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("hora de {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 24u8 , 0u8 , 104u8 , 111u8 , 114u8 , 97u8 , 114u8 , 105u8 , 111u8 , 32u8 , 100u8 , 101u8 , 32u8 , 118u8 , 101u8 , 114u8 , 97u8 , 110u8 , 111u8 , 32u8 , 100u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8 , 104u8 , 111u8 , 114u8 , 97u8 , 114u8 , 105u8 , 111u8 , 32u8 , 101u8 , 115u8 , 116u8 , 195u8 , 161u8 , 110u8 , 100u8 , 97u8 , 114u8 , 32u8 , 100u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static ET : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("−HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("({0})") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static EU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} aldeko ordua") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 17u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 117u8 , 100u8 , 97u8 , 107u8 , 111u8 , 32u8 , 111u8 , 114u8 , 100u8 , 117u8 , 97u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 97u8 , 108u8 , 100u8 , 101u8 , 107u8 , 111u8 , 32u8 , 111u8 , 114u8 , 100u8 , 117u8 , 32u8 , 101u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 114u8 , 97u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static FA_FA_AF : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("\u{200e}+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("\u{200e}−HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("{0} گرینویچ") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("گرینویچ") , region_format : alloc :: borrow :: Cow :: Borrowed ("وقت {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 27u8 , 0u8 , 217u8 , 136u8 , 217u8 , 130u8 , 216u8 , 170u8 , 32u8 , 216u8 , 170u8 , 216u8 , 167u8 , 216u8 , 168u8 , 216u8 , 179u8 , 216u8 , 170u8 , 216u8 , 167u8 , 217u8 , 134u8 , 219u8 , 140u8 , 32u8 , 123u8 , 48u8 , 125u8 , 217u8 , 136u8 , 217u8 , 130u8 , 216u8 , 170u8 , 32u8 , 216u8 , 185u8 , 216u8 , 167u8 , 216u8 , 175u8 , 219u8 , 140u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static FF_ADLM_FF_ADLM_BF_FF_ADLM_CM_FF_ADLM_GH : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("𞤑𞤖𞤘{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("𞤑𞤖𞤘") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} 𞤑𞤭𞤶𞤮\u{1e945}𞤪𞤫") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 53u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 240u8 , 158u8 , 164u8 , 144u8 , 240u8 , 158u8 , 164u8 , 182u8 , 240u8 , 158u8 , 164u8 , 162u8 , 240u8 , 158u8 , 164u8 , 165u8 , 240u8 , 158u8 , 164u8 , 178u8 , 240u8 , 158u8 , 164u8 , 163u8 , 240u8 , 158u8 , 164u8 , 173u8 , 32u8 , 240u8 , 158u8 , 164u8 , 149u8 , 240u8 , 158u8 , 164u8 , 171u8 , 240u8 , 158u8 , 165u8 , 133u8 , 240u8 , 158u8 , 164u8 , 175u8 , 240u8 , 158u8 , 164u8 , 181u8 , 123u8 , 48u8 , 125u8 , 32u8 , 240u8 , 158u8 , 164u8 , 145u8 , 240u8 , 158u8 , 164u8 , 173u8 , 240u8 , 158u8 , 164u8 , 182u8 , 240u8 , 158u8 , 164u8 , 174u8 , 240u8 , 158u8 , 165u8 , 133u8 , 240u8 , 158u8 , 164u8 , 170u8 , 240u8 , 158u8 , 164u8 , 171u8 , 32u8 , 240u8 , 158u8 , 164u8 , 150u8 , 240u8 , 158u8 , 164u8 , 162u8 , 240u8 , 158u8 , 164u8 , 177u8 , 240u8 , 158u8 , 164u8 , 170u8 , 240u8 , 158u8 , 164u8 , 173u8 , 240u8 , 158u8 , 164u8 , 188u8 , 240u8 , 158u8 , 164u8 , 181u8 , 240u8 , 158u8 , 164u8 , 178u8 , 240u8 , 158u8 , 165u8 , 139u8 , 240u8 , 158u8 , 164u8 , 163u8 , 240u8 , 158u8 , 164u8 , 171u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static FI : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+H.mm") , alloc :: borrow :: Cow :: Borrowed ("-H.mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("UTC{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("UTC") , region_format : alloc :: borrow :: Cow :: Borrowed ("aikavyöhyke: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 107u8 , 101u8 , 115u8 , 195u8 , 164u8 , 97u8 , 105u8 , 107u8 , 97u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 110u8 , 111u8 , 114u8 , 109u8 , 97u8 , 97u8 , 108u8 , 105u8 , 97u8 , 105u8 , 107u8 , 97u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static FIL : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Oras sa {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 68u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 32u8 , 84u8 , 105u8 , 109u8 , 101u8 , 32u8 , 110u8 , 103u8 , 32u8 , 123u8 , 48u8 , 125u8 , 83u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 32u8 , 110u8 , 97u8 , 32u8 , 79u8 , 114u8 , 97u8 , 115u8 , 32u8 , 115u8 , 97u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static FO_FO_DK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} tíð") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 115u8 , 117u8 , 109u8 , 109u8 , 97u8 , 114u8 , 116u8 , 195u8 , 173u8 , 195u8 , 176u8 , 123u8 , 48u8 , 125u8 , 32u8 , 118u8 , 97u8 , 110u8 , 108u8 , 105u8 , 103u8 , 32u8 , 116u8 , 195u8 , 173u8 , 195u8 , 176u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static FR_CA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("−HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("UTC{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("UTC") , region_format : alloc :: borrow :: Cow :: Borrowed ("heure : {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 104u8 , 101u8 , 117u8 , 114u8 , 101u8 , 32u8 , 97u8 , 118u8 , 97u8 , 110u8 , 99u8 , 195u8 , 169u8 , 101u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 104u8 , 101u8 , 117u8 , 114u8 , 101u8 , 32u8 , 110u8 , 111u8 , 114u8 , 109u8 , 97u8 , 108u8 , 101u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static FR_FR_BE_FR_BF_FR_BI_FR_BJ_FR_BL_FR_CD : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("−HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("UTC{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("UTC") , region_format : alloc :: borrow :: Cow :: Borrowed ("heure : {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 104u8 , 101u8 , 117u8 , 114u8 , 101u8 , 32u8 , 100u8 , 226u8 , 128u8 , 153u8 , 195u8 , 169u8 , 116u8 , 195u8 , 169u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 104u8 , 101u8 , 117u8 , 114u8 , 101u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static FY : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}-tiid") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 90u8 , 111u8 , 109u8 , 101u8 , 114u8 , 116u8 , 105u8 , 105u8 , 100u8 , 32u8 , 123u8 , 48u8 , 125u8 , 83u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 97u8 , 114u8 , 100u8 , 116u8 , 105u8 , 105u8 , 100u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static GA_GA_GB : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("MAG{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("MAG") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static GD : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 84u8 , 195u8 , 172u8 , 100u8 , 101u8 , 32u8 , 115u8 , 97u8 , 109u8 , 104u8 , 114u8 , 97u8 , 105u8 , 100u8 , 104u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 66u8 , 117u8 , 110u8 , 45u8 , 195u8 , 160u8 , 109u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static GL : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Horario de: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 25u8 , 0u8 , 72u8 , 111u8 , 114u8 , 97u8 , 114u8 , 105u8 , 111u8 , 32u8 , 100u8 , 101u8 , 32u8 , 118u8 , 101u8 , 114u8 , 195u8 , 161u8 , 110u8 , 32u8 , 100u8 , 101u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 72u8 , 111u8 , 114u8 , 97u8 , 114u8 , 105u8 , 111u8 , 32u8 , 101u8 , 115u8 , 116u8 , 195u8 , 161u8 , 110u8 , 100u8 , 97u8 , 114u8 , 32u8 , 100u8 , 101u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static GU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} સમય") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 26u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 170u8 , 166u8 , 224u8 , 170u8 , 191u8 , 224u8 , 170u8 , 181u8 , 224u8 , 170u8 , 184u8 , 32u8 , 224u8 , 170u8 , 184u8 , 224u8 , 170u8 , 174u8 , 224u8 , 170u8 , 175u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 170u8 , 174u8 , 224u8 , 170u8 , 190u8 , 224u8 , 170u8 , 168u8 , 224u8 , 170u8 , 149u8 , 32u8 , 224u8 , 170u8 , 184u8 , 224u8 , 170u8 , 174u8 , 224u8 , 170u8 , 175u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static HA_HA_GH_HA_NE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} Lokaci") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 16u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 76u8 , 111u8 , 107u8 , 97u8 , 99u8 , 105u8 , 110u8 , 32u8 , 82u8 , 97u8 , 110u8 , 97u8 , 123u8 , 48u8 , 125u8 , 32u8 , 68u8 , 97u8 , 105u8 , 100u8 , 97u8 , 105u8 , 116u8 , 97u8 , 99u8 , 99u8 , 101u8 , 110u8 , 32u8 , 76u8 , 111u8 , 107u8 , 97u8 , 99u8 , 105u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static HE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("\u{200e}+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm\u{200e}") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}\u{200e}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("שעון {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 215u8 , 169u8 , 215u8 , 162u8 , 215u8 , 149u8 , 215u8 , 159u8 , 32u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 215u8 , 167u8 , 215u8 , 153u8 , 215u8 , 165u8 , 41u8 , 215u8 , 169u8 , 215u8 , 162u8 , 215u8 , 149u8 , 215u8 , 159u8 , 32u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 215u8 , 151u8 , 215u8 , 149u8 , 215u8 , 168u8 , 215u8 , 163u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static HI_MAI : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} समय") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 32u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 161u8 , 224u8 , 165u8 , 135u8 , 224u8 , 164u8 , 178u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 135u8 , 224u8 , 164u8 , 159u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 175u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 168u8 , 224u8 , 164u8 , 149u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 175u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static HR_HR_BA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed (" -HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 108u8 , 106u8 , 101u8 , 116u8 , 110u8 , 111u8 , 32u8 , 118u8 , 114u8 , 105u8 , 106u8 , 101u8 , 109u8 , 101u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 110u8 , 111u8 , 32u8 , 118u8 , 114u8 , 105u8 , 106u8 , 101u8 , 109u8 , 101u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static HSB : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("časowe pasmo {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 108u8 , 196u8 , 155u8 , 116u8 , 110u8 , 105u8 , 32u8 , 196u8 , 141u8 , 97u8 , 115u8 , 123u8 , 48u8 , 125u8 , 32u8 , 122u8 , 121u8 , 109u8 , 115u8 , 107u8 , 105u8 , 32u8 , 196u8 , 141u8 , 97u8 , 115u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static HU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} idő") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 110u8 , 121u8 , 195u8 , 161u8 , 114u8 , 105u8 , 32u8 , 105u8 , 100u8 , 197u8 , 145u8 , 123u8 , 48u8 , 125u8 , 32u8 , 122u8 , 195u8 , 179u8 , 110u8 , 97u8 , 105u8 , 100u8 , 197u8 , 145u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static IA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("hora de {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 18u8 , 0u8 , 104u8 , 111u8 , 114u8 , 97u8 , 32u8 , 101u8 , 115u8 , 116u8 , 105u8 , 118u8 , 101u8 , 32u8 , 100u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8 , 104u8 , 111u8 , 114u8 , 97u8 , 32u8 , 110u8 , 111u8 , 114u8 , 109u8 , 97u8 , 108u8 , 32u8 , 100u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static ID : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH.mm") , alloc :: borrow :: Cow :: Borrowed ("-HH.mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Waktu {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 87u8 , 97u8 , 107u8 , 116u8 , 117u8 , 32u8 , 77u8 , 117u8 , 115u8 , 105u8 , 109u8 , 32u8 , 80u8 , 97u8 , 110u8 , 97u8 , 115u8 , 32u8 , 123u8 , 48u8 , 125u8 , 87u8 , 97u8 , 107u8 , 116u8 , 117u8 , 32u8 , 83u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static IG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Oge {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 79u8 , 103u8 , 101u8 , 32u8 , 73u8 , 104u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8 , 79u8 , 103u8 , 101u8 , 32u8 , 73u8 , 122u8 , 117u8 , 103u8 , 98u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static IS : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 16u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 115u8 , 117u8 , 109u8 , 97u8 , 114u8 , 116u8 , 195u8 , 173u8 , 109u8 , 105u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 115u8 , 116u8 , 97u8 , 195u8 , 176u8 , 97u8 , 108u8 , 116u8 , 195u8 , 173u8 , 109u8 , 105u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static IT_IT_CH_IT_SM_IT_VA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Ora {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 79u8 , 114u8 , 97u8 , 32u8 , 108u8 , 101u8 , 103u8 , 97u8 , 108u8 , 101u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 79u8 , 114u8 , 97u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static JA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}時間") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 123u8 , 48u8 , 125u8 , 229u8 , 164u8 , 143u8 , 230u8 , 153u8 , 130u8 , 233u8 , 150u8 , 147u8 , 123u8 , 48u8 , 125u8 , 230u8 , 168u8 , 153u8 , 230u8 , 186u8 , 150u8 , 230u8 , 153u8 , 130u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1}（{0}）") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static JV : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Wektu {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 16u8 , 0u8 , 87u8 , 101u8 , 107u8 , 116u8 , 117u8 , 32u8 , 75u8 , 101u8 , 116u8 , 105u8 , 103u8 , 111u8 , 32u8 , 123u8 , 48u8 , 125u8 , 87u8 , 101u8 , 107u8 , 116u8 , 117u8 , 32u8 , 83u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("დრო: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 38u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 225u8 , 131u8 , 150u8 , 225u8 , 131u8 , 144u8 , 225u8 , 131u8 , 164u8 , 225u8 , 131u8 , 174u8 , 225u8 , 131u8 , 163u8 , 225u8 , 131u8 , 154u8 , 225u8 , 131u8 , 152u8 , 225u8 , 131u8 , 161u8 , 32u8 , 225u8 , 131u8 , 147u8 , 225u8 , 131u8 , 160u8 , 225u8 , 131u8 , 157u8 , 123u8 , 48u8 , 125u8 , 32u8 , 225u8 , 131u8 , 161u8 , 225u8 , 131u8 , 162u8 , 225u8 , 131u8 , 144u8 , 225u8 , 131u8 , 156u8 , 225u8 , 131u8 , 147u8 , 225u8 , 131u8 , 144u8 , 225u8 , 131u8 , 160u8 , 225u8 , 131u8 , 162u8 , 225u8 , 131u8 , 163u8 , 225u8 , 131u8 , 154u8 , 225u8 , 131u8 , 152u8 , 32u8 , 225u8 , 131u8 , 147u8 , 225u8 , 131u8 , 160u8 , 225u8 , 131u8 , 157u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KEA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Ora di {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 79u8 , 114u8 , 97u8 , 32u8 , 100u8 , 105u8 , 32u8 , 86u8 , 101u8 , 114u8 , 111u8 , 110u8 , 32u8 , 100u8 , 105u8 , 32u8 , 123u8 , 48u8 , 125u8 , 79u8 , 114u8 , 97u8 , 32u8 , 80u8 , 97u8 , 100u8 , 114u8 , 111u8 , 110u8 , 32u8 , 100u8 , 105u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KGP : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Óra kar {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 23u8 , 0u8 , 80u8 , 114u8 , 225u8 , 187u8 , 185u8 , 103u8 , 32u8 , 107u8 , 195u8 , 163u8 , 32u8 , 195u8 , 179u8 , 114u8 , 97u8 , 32u8 , 107u8 , 97u8 , 114u8 , 32u8 , 123u8 , 48u8 , 125u8 , 195u8 , 147u8 , 114u8 , 97u8 , 32u8 , 112u8 , 225u8 , 186u8 , 189u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} уақыты") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 27u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 208u8 , 182u8 , 208u8 , 176u8 , 208u8 , 183u8 , 210u8 , 147u8 , 209u8 , 139u8 , 32u8 , 209u8 , 131u8 , 208u8 , 176u8 , 210u8 , 155u8 , 209u8 , 139u8 , 209u8 , 130u8 , 209u8 , 139u8 , 123u8 , 48u8 , 125u8 , 32u8 , 209u8 , 129u8 , 209u8 , 130u8 , 208u8 , 176u8 , 208u8 , 189u8 , 208u8 , 180u8 , 208u8 , 176u8 , 209u8 , 128u8 , 209u8 , 130u8 , 209u8 , 130u8 , 209u8 , 139u8 , 32u8 , 209u8 , 131u8 , 208u8 , 176u8 , 210u8 , 155u8 , 209u8 , 139u8 , 209u8 , 130u8 , 209u8 , 139u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KM : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("ម\u{17c9}ោង\u{200b}សកល {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("ម\u{17c9}ោង\u{200b}សកល") , region_format : alloc :: borrow :: Cow :: Borrowed ("ម\u{17c9}ោង\u{200b}នៅ\u{200b} {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 55u8 , 0u8 , 225u8 , 158u8 , 152u8 , 225u8 , 159u8 , 137u8 , 225u8 , 159u8 , 132u8 , 225u8 , 158u8 , 132u8 , 226u8 , 128u8 , 139u8 , 225u8 , 158u8 , 150u8 , 225u8 , 159u8 , 129u8 , 225u8 , 158u8 , 155u8 , 226u8 , 128u8 , 139u8 , 225u8 , 158u8 , 144u8 , 225u8 , 159u8 , 146u8 , 225u8 , 158u8 , 132u8 , 225u8 , 159u8 , 131u8 , 226u8 , 128u8 , 139u8 , 225u8 , 158u8 , 147u8 , 225u8 , 159u8 , 133u8 , 226u8 , 128u8 , 139u8 , 32u8 , 123u8 , 48u8 , 125u8 , 225u8 , 158u8 , 152u8 , 225u8 , 159u8 , 137u8 , 225u8 , 159u8 , 132u8 , 225u8 , 158u8 , 132u8 , 226u8 , 128u8 , 139u8 , 225u8 , 158u8 , 159u8 , 225u8 , 159u8 , 146u8 , 225u8 , 158u8 , 143u8 , 225u8 , 158u8 , 132u8 , 225u8 , 159u8 , 139u8 , 225u8 , 158u8 , 138u8 , 225u8 , 158u8 , 182u8 , 225u8 , 158u8 , 154u8 , 226u8 , 128u8 , 139u8 , 225u8 , 158u8 , 147u8 , 225u8 , 159u8 , 133u8 , 32u8 , 226u8 , 128u8 , 139u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KN : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} ಸಮಯ") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 26u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 178u8 , 166u8 , 224u8 , 178u8 , 191u8 , 224u8 , 178u8 , 168u8 , 224u8 , 178u8 , 166u8 , 32u8 , 224u8 , 178u8 , 184u8 , 224u8 , 178u8 , 174u8 , 224u8 , 178u8 , 175u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 178u8 , 170u8 , 224u8 , 179u8 , 141u8 , 224u8 , 178u8 , 176u8 , 224u8 , 178u8 , 174u8 , 224u8 , 178u8 , 190u8 , 224u8 , 178u8 , 163u8 , 224u8 , 178u8 , 191u8 , 224u8 , 178u8 , 164u8 , 32u8 , 224u8 , 178u8 , 184u8 , 224u8 , 178u8 , 174u8 , 224u8 , 178u8 , 175u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KOK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} व\u{947}ळ") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 32u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 161u8 , 224u8 , 165u8 , 135u8 , 224u8 , 164u8 , 178u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 175u8 , 224u8 , 164u8 , 159u8 , 32u8 , 224u8 , 164u8 , 181u8 , 224u8 , 165u8 , 135u8 , 224u8 , 164u8 , 179u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 170u8 , 224u8 , 165u8 , 141u8 , 224u8 , 164u8 , 176u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 163u8 , 224u8 , 164u8 , 191u8 , 224u8 , 164u8 , 164u8 , 32u8 , 224u8 , 164u8 , 181u8 , 224u8 , 165u8 , 135u8 , 224u8 , 164u8 , 179u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KO_KO_KP : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} 시간") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 237u8 , 149u8 , 152u8 , 234u8 , 179u8 , 132u8 , 32u8 , 237u8 , 145u8 , 156u8 , 236u8 , 164u8 , 128u8 , 236u8 , 139u8 , 156u8 , 123u8 , 48u8 , 125u8 , 32u8 , 237u8 , 145u8 , 156u8 , 236u8 , 164u8 , 128u8 , 236u8 , 139u8 , 156u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1}({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KSH : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Zick vun {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 18u8 , 0u8 , 83u8 , 117u8 , 109u8 , 109u8 , 101u8 , 114u8 , 122u8 , 105u8 , 99u8 , 107u8 , 32u8 , 118u8 , 117u8 , 110u8 , 32u8 , 123u8 , 48u8 , 125u8 , 83u8 , 99u8 , 104u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 116u8 , 116u8 , 122u8 , 105u8 , 99u8 , 107u8 , 32u8 , 118u8 , 117u8 , 110u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KS_DEVA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} वख") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 30u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 161u8 , 224u8 , 165u8 , 135u8 , 32u8 , 224u8 , 164u8 , 178u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 135u8 , 224u8 , 164u8 , 159u8 , 32u8 , 224u8 , 164u8 , 181u8 , 224u8 , 164u8 , 150u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 165u8 , 141u8 , 224u8 , 164u8 , 159u8 , 224u8 , 165u8 , 136u8 , 224u8 , 164u8 , 168u8 , 224u8 , 165u8 , 141u8 , 224u8 , 164u8 , 161u8 , 224u8 , 164u8 , 176u8 , 224u8 , 165u8 , 141u8 , 224u8 , 164u8 , 161u8 , 32u8 , 224u8 , 164u8 , 181u8 , 224u8 , 164u8 , 150u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KS_KS_ARAB : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} و\u{64e}کھ") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 26u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 218u8 , 136u8 , 219u8 , 146u8 , 32u8 , 217u8 , 132u8 , 216u8 , 167u8 , 216u8 , 166u8 , 217u8 , 185u8 , 32u8 , 217u8 , 136u8 , 217u8 , 142u8 , 218u8 , 169u8 , 218u8 , 190u8 , 123u8 , 48u8 , 125u8 , 32u8 , 217u8 , 133u8 , 216u8 , 185u8 , 219u8 , 140u8 , 217u8 , 178u8 , 216u8 , 177u8 , 219u8 , 140u8 , 32u8 , 217u8 , 136u8 , 217u8 , 142u8 , 218u8 , 169u8 , 218u8 , 190u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static KY : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} убактысы") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static LB : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} Zäit") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 83u8 , 117u8 , 109u8 , 109u8 , 101u8 , 114u8 , 122u8 , 195u8 , 164u8 , 105u8 , 116u8 , 123u8 , 48u8 , 125u8 , 32u8 , 78u8 , 111u8 , 114u8 , 109u8 , 97u8 , 108u8 , 122u8 , 195u8 , 164u8 , 105u8 , 116u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static LN_LN_AO_LN_CF_LN_CG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Ngonga ya {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static LO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("ເວລາ {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 37u8 , 0u8 , 224u8 , 187u8 , 128u8 , 224u8 , 186u8 , 167u8 , 224u8 , 186u8 , 165u8 , 224u8 , 186u8 , 178u8 , 224u8 , 186u8 , 129u8 , 224u8 , 186u8 , 178u8 , 224u8 , 186u8 , 135u8 , 224u8 , 187u8 , 128u8 , 224u8 , 186u8 , 167u8 , 224u8 , 186u8 , 177u8 , 224u8 , 186u8 , 153u8 , 32u8 , 123u8 , 48u8 , 125u8 , 224u8 , 187u8 , 128u8 , 224u8 , 186u8 , 167u8 , 224u8 , 186u8 , 165u8 , 224u8 , 186u8 , 178u8 , 224u8 , 186u8 , 161u8 , 224u8 , 186u8 , 178u8 , 224u8 , 186u8 , 148u8 , 224u8 , 186u8 , 149u8 , 224u8 , 186u8 , 176u8 , 224u8 , 186u8 , 150u8 , 224u8 , 186u8 , 178u8 , 224u8 , 186u8 , 153u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static LT : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("−HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Laikas: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 86u8 , 97u8 , 115u8 , 97u8 , 114u8 , 111u8 , 115u8 , 32u8 , 108u8 , 97u8 , 105u8 , 107u8 , 97u8 , 115u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 197u8 , 189u8 , 105u8 , 101u8 , 109u8 , 111u8 , 115u8 , 32u8 , 108u8 , 97u8 , 105u8 , 107u8 , 97u8 , 115u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static LV : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Laika josla: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 18u8 , 0u8 , 123u8 , 48u8 , 125u8 , 58u8 , 32u8 , 118u8 , 97u8 , 115u8 , 97u8 , 114u8 , 97u8 , 115u8 , 32u8 , 108u8 , 97u8 , 105u8 , 107u8 , 115u8 , 123u8 , 48u8 , 125u8 , 58u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 116u8 , 97u8 , 32u8 , 108u8 , 97u8 , 105u8 , 107u8 , 115u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{0} ({1})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static MK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Време во {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static ML : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("ജിഎംടി {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("ജിഎംടി") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} സമയം") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 41u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 180u8 , 161u8 , 224u8 , 181u8 , 135u8 , 224u8 , 180u8 , 178u8 , 224u8 , 181u8 , 136u8 , 224u8 , 180u8 , 177u8 , 224u8 , 181u8 , 141u8 , 224u8 , 180u8 , 177u8 , 224u8 , 181u8 , 141u8 , 32u8 , 224u8 , 180u8 , 184u8 , 224u8 , 180u8 , 174u8 , 224u8 , 180u8 , 175u8 , 224u8 , 180u8 , 130u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 180u8 , 184u8 , 224u8 , 181u8 , 141u8 , 224u8 , 180u8 , 177u8 , 224u8 , 181u8 , 141u8 , 224u8 , 180u8 , 177u8 , 224u8 , 180u8 , 190u8 , 224u8 , 181u8 , 187u8 , 224u8 , 180u8 , 161u8 , 224u8 , 181u8 , 135u8 , 224u8 , 181u8 , 188u8 , 224u8 , 180u8 , 161u8 , 224u8 , 181u8 , 141u8 , 32u8 , 224u8 , 180u8 , 184u8 , 224u8 , 180u8 , 174u8 , 224u8 , 180u8 , 175u8 , 224u8 , 180u8 , 130u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static MN : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}-н цаг") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 22u8 , 0u8 , 123u8 , 48u8 , 125u8 , 45u8 , 208u8 , 189u8 , 32u8 , 208u8 , 183u8 , 209u8 , 131u8 , 208u8 , 189u8 , 209u8 , 139u8 , 32u8 , 209u8 , 134u8 , 208u8 , 176u8 , 208u8 , 179u8 , 123u8 , 48u8 , 125u8 , 45u8 , 208u8 , 189u8 , 32u8 , 209u8 , 129u8 , 209u8 , 130u8 , 208u8 , 176u8 , 208u8 , 189u8 , 208u8 , 180u8 , 208u8 , 176u8 , 209u8 , 128u8 , 209u8 , 130u8 , 32u8 , 209u8 , 134u8 , 208u8 , 176u8 , 208u8 , 179u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static MNI_MNI_BENG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("জি এম টি {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("জি এম টি") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} ট\u{9be}ইম") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 40u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 32u8 , 224u8 , 166u8 , 166u8 , 224u8 , 167u8 , 135u8 , 224u8 , 166u8 , 178u8 , 224u8 , 166u8 , 190u8 , 224u8 , 166u8 , 135u8 , 224u8 , 166u8 , 159u8 , 32u8 , 224u8 , 166u8 , 159u8 , 224u8 , 166u8 , 190u8 , 224u8 , 166u8 , 135u8 , 224u8 , 166u8 , 174u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8 , 32u8 , 224u8 , 166u8 , 183u8 , 224u8 , 167u8 , 141u8 , 224u8 , 166u8 , 159u8 , 224u8 , 167u8 , 135u8 , 224u8 , 166u8 , 168u8 , 224u8 , 167u8 , 141u8 , 224u8 , 166u8 , 166u8 , 224u8 , 166u8 , 176u8 , 224u8 , 167u8 , 141u8 , 224u8 , 166u8 , 166u8 , 32u8 , 224u8 , 166u8 , 159u8 , 224u8 , 166u8 , 190u8 , 224u8 , 166u8 , 135u8 , 224u8 , 166u8 , 174u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static MR : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("[GMT]{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("[GMT]") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} व\u{947}ळ") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 47u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 165u8 , 130u8 , 224u8 , 164u8 , 176u8 , 224u8 , 165u8 , 141u8 , 224u8 , 164u8 , 175u8 , 224u8 , 164u8 , 170u8 , 224u8 , 165u8 , 141u8 , 224u8 , 164u8 , 176u8 , 224u8 , 164u8 , 149u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 182u8 , 32u8 , 224u8 , 164u8 , 181u8 , 224u8 , 165u8 , 135u8 , 224u8 , 164u8 , 179u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 170u8 , 224u8 , 165u8 , 141u8 , 224u8 , 164u8 , 176u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 163u8 , 32u8 , 224u8 , 164u8 , 181u8 , 224u8 , 165u8 , 135u8 , 224u8 , 164u8 , 179u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static MS_ID : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH.mm") , alloc :: borrow :: Cow :: Borrowed ("-HH.mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Waktu {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 87u8 , 97u8 , 107u8 , 116u8 , 117u8 , 32u8 , 83u8 , 105u8 , 97u8 , 110u8 , 103u8 , 32u8 , 123u8 , 48u8 , 125u8 , 87u8 , 97u8 , 107u8 , 116u8 , 117u8 , 32u8 , 80u8 , 105u8 , 97u8 , 119u8 , 97u8 , 105u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static MS_MS_BN_MS_SG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Waktu {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 87u8 , 97u8 , 107u8 , 116u8 , 117u8 , 32u8 , 83u8 , 105u8 , 97u8 , 110u8 , 103u8 , 32u8 , 123u8 , 48u8 , 125u8 , 87u8 , 97u8 , 107u8 , 116u8 , 117u8 , 32u8 , 80u8 , 105u8 , 97u8 , 119u8 , 97u8 , 105u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static MT : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Ħin ta’ {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 196u8 , 166u8 , 105u8 , 110u8 , 32u8 , 83u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static MY : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} အချ\u{102d}န\u{103a}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 59u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 225u8 , 128u8 , 148u8 , 225u8 , 128u8 , 189u8 , 225u8 , 128u8 , 177u8 , 225u8 , 128u8 , 155u8 , 225u8 , 128u8 , 172u8 , 225u8 , 128u8 , 158u8 , 225u8 , 128u8 , 174u8 , 32u8 , 225u8 , 128u8 , 133u8 , 225u8 , 128u8 , 182u8 , 225u8 , 128u8 , 144u8 , 225u8 , 128u8 , 177u8 , 225u8 , 128u8 , 172u8 , 225u8 , 128u8 , 186u8 , 225u8 , 128u8 , 129u8 , 225u8 , 128u8 , 187u8 , 225u8 , 128u8 , 173u8 , 225u8 , 128u8 , 148u8 , 225u8 , 128u8 , 186u8 , 123u8 , 48u8 , 125u8 , 32u8 , 225u8 , 128u8 , 133u8 , 225u8 , 128u8 , 182u8 , 225u8 , 128u8 , 144u8 , 225u8 , 128u8 , 177u8 , 225u8 , 128u8 , 172u8 , 225u8 , 128u8 , 186u8 , 225u8 , 128u8 , 129u8 , 225u8 , 128u8 , 187u8 , 225u8 , 128u8 , 173u8 , 225u8 , 128u8 , 148u8 , 225u8 , 128u8 , 186u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static NB_NB_SJ_NO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("tidssone for {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 17u8 , 0u8 , 115u8 , 111u8 , 109u8 , 109u8 , 101u8 , 114u8 , 116u8 , 105u8 , 100u8 , 32u8 , 226u8 , 128u8 , 147u8 , 32u8 , 123u8 , 48u8 , 125u8 , 110u8 , 111u8 , 114u8 , 109u8 , 97u8 , 108u8 , 116u8 , 105u8 , 100u8 , 32u8 , 226u8 , 128u8 , 147u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static NE_NE_IN : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} समय") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 224u8 , 165u8 , 167u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 224u8 , 165u8 , 166u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SR_NL_SX : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}-tijd") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 122u8 , 111u8 , 109u8 , 101u8 , 114u8 , 116u8 , 105u8 , 106u8 , 100u8 , 32u8 , 123u8 , 48u8 , 125u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 97u8 , 114u8 , 100u8 , 116u8 , 105u8 , 106u8 , 100u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static NN : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("tidssone for {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 17u8 , 0u8 , 115u8 , 111u8 , 109u8 , 109u8 , 97u8 , 114u8 , 116u8 , 105u8 , 100u8 , 32u8 , 226u8 , 128u8 , 147u8 , 32u8 , 123u8 , 48u8 , 125u8 , 110u8 , 111u8 , 114u8 , 109u8 , 97u8 , 108u8 , 116u8 , 105u8 , 100u8 , 32u8 , 226u8 , 128u8 , 147u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static OR : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} ସମୟ") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 35u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 172u8 , 166u8 , 224u8 , 172u8 , 191u8 , 224u8 , 172u8 , 172u8 , 224u8 , 172u8 , 190u8 , 224u8 , 172u8 , 178u8 , 224u8 , 173u8 , 139u8 , 224u8 , 172u8 , 149u8 , 32u8 , 224u8 , 172u8 , 184u8 , 224u8 , 172u8 , 174u8 , 224u8 , 173u8 , 159u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 172u8 , 174u8 , 224u8 , 172u8 , 190u8 , 224u8 , 172u8 , 168u8 , 224u8 , 172u8 , 190u8 , 224u8 , 172u8 , 153u8 , 224u8 , 173u8 , 141u8 , 224u8 , 172u8 , 149u8 , 32u8 , 224u8 , 172u8 , 184u8 , 224u8 , 172u8 , 174u8 , 224u8 , 173u8 , 159u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static OS_OS_RU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} рӕстӕг") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static PA_PA_GURU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} ਵ\u{a47}ਲਾ") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 38u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 168u8 , 170u8 , 224u8 , 169u8 , 141u8 , 224u8 , 168u8 , 176u8 , 224u8 , 168u8 , 149u8 , 224u8 , 168u8 , 190u8 , 224u8 , 168u8 , 184u8 , 224u8 , 168u8 , 188u8 , 32u8 , 224u8 , 168u8 , 181u8 , 224u8 , 169u8 , 135u8 , 224u8 , 168u8 , 178u8 , 224u8 , 168u8 , 190u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 168u8 , 174u8 , 224u8 , 168u8 , 191u8 , 224u8 , 168u8 , 134u8 , 224u8 , 168u8 , 176u8 , 224u8 , 169u8 , 128u8 , 32u8 , 224u8 , 168u8 , 181u8 , 224u8 , 169u8 , 135u8 , 224u8 , 168u8 , 178u8 , 224u8 , 168u8 , 190u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static PCM : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} Taim") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 17u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 68u8 , 195u8 , 169u8 , 108u8 , 97u8 , 195u8 , 173u8 , 116u8 , 32u8 , 84u8 , 97u8 , 105u8 , 109u8 , 123u8 , 48u8 , 125u8 , 32u8 , 70u8 , 195u8 , 173u8 , 107u8 , 115u8 , 100u8 , 32u8 , 84u8 , 97u8 , 105u8 , 109u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static PL : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("czas: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 16u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 99u8 , 122u8 , 97u8 , 115u8 , 32u8 , 108u8 , 101u8 , 116u8 , 110u8 , 105u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 99u8 , 122u8 , 97u8 , 115u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 111u8 , 119u8 , 121u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static PS_PS_PK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("د {0} په وخت") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 24u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 216u8 , 177u8 , 218u8 , 188u8 , 216u8 , 167u8 , 32u8 , 217u8 , 136u8 , 216u8 , 177u8 , 218u8 , 129u8 , 32u8 , 217u8 , 136u8 , 216u8 , 174u8 , 216u8 , 170u8 , 123u8 , 48u8 , 125u8 , 32u8 , 217u8 , 133u8 , 216u8 , 185u8 , 219u8 , 140u8 , 216u8 , 167u8 , 216u8 , 177u8 , 219u8 , 140u8 , 32u8 , 217u8 , 136u8 , 216u8 , 174u8 , 216u8 , 170u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static PT : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Horário {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 23u8 , 0u8 , 72u8 , 111u8 , 114u8 , 195u8 , 161u8 , 114u8 , 105u8 , 111u8 , 32u8 , 100u8 , 101u8 , 32u8 , 86u8 , 101u8 , 114u8 , 195u8 , 163u8 , 111u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 72u8 , 111u8 , 114u8 , 195u8 , 161u8 , 114u8 , 105u8 , 111u8 , 32u8 , 80u8 , 97u8 , 100u8 , 114u8 , 195u8 , 163u8 , 111u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static PT_AO_PT_CH_PT_CV_PT_GQ_PT_GW_PT_LU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Hora de {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 72u8 , 111u8 , 114u8 , 97u8 , 32u8 , 112u8 , 97u8 , 100u8 , 114u8 , 195u8 , 163u8 , 111u8 , 32u8 , 100u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8 , 72u8 , 111u8 , 114u8 , 97u8 , 32u8 , 112u8 , 97u8 , 100u8 , 114u8 , 195u8 , 163u8 , 111u8 , 32u8 , 100u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static RM : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("temp: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 17u8 , 0u8 , 116u8 , 101u8 , 109u8 , 112u8 , 32u8 , 100u8 , 97u8 , 32u8 , 115u8 , 116u8 , 97u8 , 100u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 116u8 , 101u8 , 109u8 , 112u8 , 32u8 , 110u8 , 111u8 , 114u8 , 109u8 , 97u8 , 108u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static RO_RO_MD : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Ora din {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 79u8 , 114u8 , 97u8 , 32u8 , 100u8 , 101u8 , 32u8 , 118u8 , 97u8 , 114u8 , 196u8 , 131u8 , 32u8 , 100u8 , 105u8 , 110u8 , 32u8 , 123u8 , 48u8 , 125u8 , 79u8 , 114u8 , 97u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 32u8 , 100u8 , 105u8 , 110u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static RU_RU_BY_RU_KG_RU_KZ_RU_MD_RU_UA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 28u8 , 0u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 208u8 , 187u8 , 208u8 , 181u8 , 209u8 , 130u8 , 208u8 , 189u8 , 208u8 , 181u8 , 208u8 , 181u8 , 32u8 , 208u8 , 178u8 , 209u8 , 128u8 , 208u8 , 181u8 , 208u8 , 188u8 , 209u8 , 143u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 209u8 , 129u8 , 209u8 , 130u8 , 208u8 , 176u8 , 208u8 , 189u8 , 208u8 , 180u8 , 208u8 , 176u8 , 209u8 , 128u8 , 209u8 , 130u8 , 208u8 , 189u8 , 208u8 , 190u8 , 208u8 , 181u8 , 32u8 , 208u8 , 178u8 , 209u8 , 128u8 , 208u8 , 181u8 , 208u8 , 188u8 , 209u8 , 143u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} समय:") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 33u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 161u8 , 224u8 , 165u8 , 135u8 , 224u8 , 164u8 , 178u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 135u8 , 224u8 , 164u8 , 159u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 175u8 , 58u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 168u8 , 224u8 , 164u8 , 149u8 , 32u8 , 224u8 , 164u8 , 184u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 175u8 , 58u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SAT_SAT_OLCK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("ᱡᱤᱮᱢᱴᱤ{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("ᱡᱤᱮᱢᱴᱤ") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} ᱚᱠᱛᱚ") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 38u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 225u8 , 177u8 , 171u8 , 225u8 , 177u8 , 164u8 , 225u8 , 177u8 , 177u8 , 225u8 , 177u8 , 181u8 , 225u8 , 177u8 , 174u8 , 225u8 , 177u8 , 178u8 , 225u8 , 177u8 , 159u8 , 32u8 , 225u8 , 177u8 , 154u8 , 225u8 , 177u8 , 160u8 , 225u8 , 177u8 , 155u8 , 225u8 , 177u8 , 154u8 , 123u8 , 48u8 , 125u8 , 32u8 , 225u8 , 177u8 , 174u8 , 225u8 , 177u8 , 180u8 , 225u8 , 177u8 , 174u8 , 225u8 , 177u8 , 177u8 , 225u8 , 177u8 , 176u8 , 225u8 , 177u8 , 159u8 , 225u8 , 177u8 , 168u8 , 225u8 , 177u8 , 176u8 , 32u8 , 225u8 , 177u8 , 154u8 , 225u8 , 177u8 , 160u8 , 225u8 , 177u8 , 155u8 , 225u8 , 177u8 , 154u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SC : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Ora {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 79u8 , 114u8 , 97u8 , 32u8 , 108u8 , 101u8 , 103u8 , 97u8 , 108u8 , 101u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 79u8 , 114u8 , 97u8 , 32u8 , 105u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SD_DEVA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} वक\u{94d}त") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 39u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 166u8 , 224u8 , 165u8 , 128u8 , 224u8 , 164u8 , 130u8 , 224u8 , 165u8 , 146u8 , 224u8 , 164u8 , 185u8 , 32u8 , 224u8 , 164u8 , 156u8 , 224u8 , 165u8 , 139u8 , 32u8 , 224u8 , 164u8 , 181u8 , 224u8 , 164u8 , 149u8 , 224u8 , 165u8 , 141u8 , 224u8 , 164u8 , 164u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 164u8 , 174u8 , 224u8 , 164u8 , 133u8 , 224u8 , 164u8 , 175u8 , 224u8 , 164u8 , 190u8 , 224u8 , 164u8 , 176u8 , 224u8 , 165u8 , 128u8 , 32u8 , 224u8 , 164u8 , 181u8 , 224u8 , 164u8 , 149u8 , 224u8 , 165u8 , 141u8 , 224u8 , 164u8 , 164u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SD_SD_ARAB : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} وقت") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 26u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 218u8 , 143u8 , 217u8 , 138u8 , 217u8 , 134u8 , 217u8 , 135u8 , 217u8 , 134u8 , 32u8 , 216u8 , 172u8 , 217u8 , 136u8 , 32u8 , 217u8 , 136u8 , 217u8 , 130u8 , 216u8 , 170u8 , 123u8 , 48u8 , 125u8 , 32u8 , 217u8 , 133u8 , 216u8 , 185u8 , 217u8 , 138u8 , 216u8 , 167u8 , 216u8 , 177u8 , 217u8 , 138u8 , 32u8 , 217u8 , 136u8 , 217u8 , 130u8 , 216u8 , 170u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SE_FI : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("{0} GMT") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} áigi") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 103u8 , 101u8 , 97u8 , 115u8 , 115u8 , 101u8 , 195u8 , 161u8 , 105u8 , 103u8 , 105u8 , 123u8 , 48u8 , 125u8 , 32u8 , 100u8 , 195u8 , 161u8 , 108u8 , 118u8 , 101u8 , 195u8 , 161u8 , 105u8 , 103u8 , 105u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{0} ({1})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SE_SE_SE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("−HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("UTC{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("UTC") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} áigi") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{0} ({1})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SI : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH.mm") , alloc :: borrow :: Cow :: Borrowed ("-HH.mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("ග\u{dca}\u{200d}ර\u{dd2}මවේ{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("ග\u{dca}\u{200d}ර\u{dd2}මවේ") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} වේල\u{dcf}ව") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 44u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 182u8 , 175u8 , 224u8 , 183u8 , 146u8 , 224u8 , 183u8 , 128u8 , 224u8 , 183u8 , 143u8 , 224u8 , 182u8 , 134u8 , 224u8 , 182u8 , 189u8 , 224u8 , 183u8 , 157u8 , 224u8 , 182u8 , 154u8 , 32u8 , 224u8 , 183u8 , 128u8 , 224u8 , 183u8 , 154u8 , 224u8 , 182u8 , 189u8 , 224u8 , 183u8 , 143u8 , 224u8 , 183u8 , 128u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 183u8 , 131u8 , 224u8 , 182u8 , 184u8 , 224u8 , 183u8 , 138u8 , 224u8 , 182u8 , 184u8 , 224u8 , 182u8 , 173u8 , 32u8 , 224u8 , 183u8 , 128u8 , 224u8 , 183u8 , 154u8 , 224u8 , 182u8 , 189u8 , 224u8 , 183u8 , 143u8 , 224u8 , 183u8 , 128u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("časové pásmo {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SL : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH.mm") , alloc :: borrow :: Cow :: Borrowed ("-HH.mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} čas") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 16u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 112u8 , 111u8 , 108u8 , 101u8 , 116u8 , 110u8 , 105u8 , 32u8 , 196u8 , 141u8 , 97u8 , 115u8 , 123u8 , 48u8 , 125u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 110u8 , 105u8 , 32u8 , 196u8 , 141u8 , 97u8 , 115u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SO_SO_DJ_SO_ET_SO_KE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Waqtiga {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 24u8 , 0u8 , 87u8 , 97u8 , 113u8 , 116u8 , 105u8 , 103u8 , 97u8 , 32u8 , 68u8 , 104u8 , 97u8 , 114u8 , 97u8 , 97u8 , 114u8 , 116u8 , 97u8 , 32u8 , 101u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8 , 87u8 , 97u8 , 113u8 , 116u8 , 105u8 , 103u8 , 97u8 , 32u8 , 67u8 , 97u8 , 97u8 , 100u8 , 105u8 , 103u8 , 97u8 , 32u8 , 65u8 , 104u8 , 32u8 , 101u8 , 101u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SQ_SQ_MK_SQ_XK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Ora: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 79u8 , 114u8 , 97u8 , 32u8 , 118u8 , 101u8 , 114u8 , 111u8 , 114u8 , 101u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 79u8 , 114u8 , 97u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 101u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SR_CYRL_BA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 30u8 , 0u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 209u8 , 153u8 , 208u8 , 181u8 , 209u8 , 130u8 , 209u8 , 154u8 , 208u8 , 181u8 , 32u8 , 208u8 , 178u8 , 209u8 , 128u8 , 208u8 , 184u8 , 209u8 , 152u8 , 208u8 , 181u8 , 208u8 , 188u8 , 208u8 , 181u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 209u8 , 129u8 , 209u8 , 130u8 , 208u8 , 176u8 , 208u8 , 189u8 , 208u8 , 180u8 , 208u8 , 176u8 , 209u8 , 128u8 , 208u8 , 180u8 , 208u8 , 189u8 , 208u8 , 190u8 , 32u8 , 208u8 , 178u8 , 209u8 , 128u8 , 208u8 , 184u8 , 209u8 , 152u8 , 208u8 , 181u8 , 208u8 , 188u8 , 208u8 , 181u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SR_LATN_BA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 108u8 , 106u8 , 101u8 , 116u8 , 110u8 , 106u8 , 101u8 , 32u8 , 118u8 , 114u8 , 105u8 , 106u8 , 101u8 , 109u8 , 101u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 110u8 , 111u8 , 32u8 , 118u8 , 114u8 , 105u8 , 106u8 , 101u8 , 109u8 , 101u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SR_LATN_SR_LATN_ME_SR_LATN_XK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 17u8 , 0u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 108u8 , 101u8 , 116u8 , 110u8 , 106u8 , 101u8 , 32u8 , 118u8 , 114u8 , 101u8 , 109u8 , 101u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8 , 110u8 , 111u8 , 32u8 , 118u8 , 114u8 , 101u8 , 109u8 , 101u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SR_SR_CYRL_SR_CYRL_ME_SR_CYRL_XK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 26u8 , 0u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 208u8 , 187u8 , 208u8 , 181u8 , 209u8 , 130u8 , 209u8 , 154u8 , 208u8 , 181u8 , 32u8 , 208u8 , 178u8 , 209u8 , 128u8 , 208u8 , 181u8 , 208u8 , 188u8 , 208u8 , 181u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 209u8 , 129u8 , 209u8 , 130u8 , 208u8 , 176u8 , 208u8 , 189u8 , 208u8 , 180u8 , 208u8 , 176u8 , 209u8 , 128u8 , 208u8 , 180u8 , 208u8 , 189u8 , 208u8 , 190u8 , 32u8 , 208u8 , 178u8 , 209u8 , 128u8 , 208u8 , 181u8 , 208u8 , 188u8 , 208u8 , 181u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SV_SV_AX_SV_FI : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("−HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}tid") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 115u8 , 111u8 , 109u8 , 109u8 , 97u8 , 114u8 , 116u8 , 105u8 , 100u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 110u8 , 111u8 , 114u8 , 109u8 , 97u8 , 108u8 , 116u8 , 105u8 , 100u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static SW_SW_CD_SW_KE_SW_UG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Saa za {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 83u8 , 97u8 , 97u8 , 32u8 , 122u8 , 97u8 , 32u8 , 77u8 , 99u8 , 104u8 , 97u8 , 110u8 , 97u8 , 32u8 , 122u8 , 97u8 , 32u8 , 123u8 , 48u8 , 125u8 , 83u8 , 97u8 , 97u8 , 32u8 , 122u8 , 97u8 , 32u8 , 119u8 , 97u8 , 115u8 , 116u8 , 97u8 , 110u8 , 105u8 , 32u8 , 122u8 , 97u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static TA_TA_LK_TA_MY_TA_SG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} நேரம\u{bcd}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 38u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 174u8 , 170u8 , 224u8 , 174u8 , 149u8 , 224u8 , 174u8 , 178u8 , 224u8 , 175u8 , 138u8 , 224u8 , 174u8 , 179u8 , 224u8 , 174u8 , 191u8 , 32u8 , 224u8 , 174u8 , 168u8 , 224u8 , 175u8 , 135u8 , 224u8 , 174u8 , 176u8 , 224u8 , 174u8 , 174u8 , 224u8 , 175u8 , 141u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 174u8 , 168u8 , 224u8 , 174u8 , 191u8 , 224u8 , 174u8 , 178u8 , 224u8 , 175u8 , 136u8 , 224u8 , 174u8 , 175u8 , 224u8 , 174u8 , 190u8 , 224u8 , 174u8 , 169u8 , 32u8 , 224u8 , 174u8 , 168u8 , 224u8 , 175u8 , 135u8 , 224u8 , 174u8 , 176u8 , 224u8 , 174u8 , 174u8 , 224u8 , 175u8 , 141u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static TE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} సమయం") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 54u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 176u8 , 170u8 , 224u8 , 176u8 , 151u8 , 224u8 , 176u8 , 159u8 , 224u8 , 176u8 , 191u8 , 32u8 , 224u8 , 176u8 , 181u8 , 224u8 , 177u8 , 134u8 , 224u8 , 176u8 , 178u8 , 224u8 , 177u8 , 129u8 , 224u8 , 176u8 , 164u8 , 224u8 , 177u8 , 129u8 , 224u8 , 176u8 , 176u8 , 224u8 , 177u8 , 129u8 , 32u8 , 224u8 , 176u8 , 184u8 , 224u8 , 176u8 , 174u8 , 224u8 , 176u8 , 175u8 , 224u8 , 176u8 , 130u8 , 123u8 , 48u8 , 125u8 , 32u8 , 224u8 , 176u8 , 170u8 , 224u8 , 177u8 , 141u8 , 224u8 , 176u8 , 176u8 , 224u8 , 176u8 , 190u8 , 224u8 , 176u8 , 174u8 , 224u8 , 176u8 , 190u8 , 224u8 , 176u8 , 163u8 , 224u8 , 176u8 , 191u8 , 224u8 , 176u8 , 149u8 , 32u8 , 224u8 , 176u8 , 184u8 , 224u8 , 176u8 , 174u8 , 224u8 , 176u8 , 175u8 , 224u8 , 176u8 , 130u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static TH : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("เวลา{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 33u8 , 0u8 , 224u8 , 185u8 , 128u8 , 224u8 , 184u8 , 167u8 , 224u8 , 184u8 , 165u8 , 224u8 , 184u8 , 178u8 , 224u8 , 184u8 , 173u8 , 224u8 , 184u8 , 173u8 , 224u8 , 184u8 , 161u8 , 224u8 , 185u8 , 129u8 , 224u8 , 184u8 , 170u8 , 224u8 , 184u8 , 135u8 , 123u8 , 48u8 , 125u8 , 224u8 , 185u8 , 128u8 , 224u8 , 184u8 , 167u8 , 224u8 , 184u8 , 165u8 , 224u8 , 184u8 , 178u8 , 224u8 , 184u8 , 161u8 , 224u8 , 184u8 , 178u8 , 224u8 , 184u8 , 149u8 , 224u8 , 184u8 , 163u8 , 224u8 , 184u8 , 144u8 , 224u8 , 184u8 , 178u8 , 224u8 , 184u8 , 153u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static TI_TI_ER : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("ግዜ {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 23u8 , 0u8 , 225u8 , 140u8 , 141u8 , 225u8 , 139u8 , 156u8 , 32u8 , 225u8 , 138u8 , 173u8 , 225u8 , 136u8 , 168u8 , 225u8 , 136u8 , 157u8 , 225u8 , 137u8 , 178u8 , 32u8 , 123u8 , 48u8 , 125u8 , 225u8 , 136u8 , 157u8 , 225u8 , 139u8 , 177u8 , 225u8 , 137u8 , 165u8 , 32u8 , 225u8 , 140u8 , 141u8 , 225u8 , 139u8 , 156u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static TK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} wagty") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 17u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 116u8 , 111u8 , 109u8 , 117u8 , 115u8 , 107u8 , 121u8 , 32u8 , 119u8 , 97u8 , 103u8 , 116u8 , 121u8 , 123u8 , 48u8 , 125u8 , 32u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 116u8 , 32u8 , 119u8 , 97u8 , 103u8 , 116u8 , 121u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static TO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Taimi {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 84u8 , 97u8 , 105u8 , 109u8 , 105u8 , 32u8 , 108u8 , 105u8 , 108u8 , 105u8 , 117u8 , 123u8 , 48u8 , 125u8 , 32u8 , 84u8 , 97u8 , 105u8 , 109u8 , 105u8 , 32u8 , 116u8 , 111u8 , 116u8 , 111u8 , 110u8 , 117u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static TR_TR_CY : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} Saati") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 89u8 , 97u8 , 122u8 , 32u8 , 83u8 , 97u8 , 97u8 , 116u8 , 105u8 , 123u8 , 48u8 , 125u8 , 32u8 , 83u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 116u8 , 32u8 , 83u8 , 97u8 , 97u8 , 116u8 , 105u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static TT : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} вакыты") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 27u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 210u8 , 151u8 , 211u8 , 153u8 , 208u8 , 185u8 , 208u8 , 179u8 , 208u8 , 181u8 , 32u8 , 208u8 , 178u8 , 208u8 , 176u8 , 208u8 , 186u8 , 209u8 , 139u8 , 209u8 , 130u8 , 209u8 , 139u8 , 123u8 , 48u8 , 125u8 , 32u8 , 208u8 , 179u8 , 208u8 , 176u8 , 208u8 , 180u8 , 211u8 , 153u8 , 209u8 , 130u8 , 208u8 , 184u8 , 32u8 , 208u8 , 178u8 , 208u8 , 176u8 , 208u8 , 186u8 , 209u8 , 139u8 , 209u8 , 130u8 , 209u8 , 139u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static UG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} ۋاقتى") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 27u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 217u8 , 138u8 , 216u8 , 167u8 , 216u8 , 178u8 , 217u8 , 132u8 , 217u8 , 137u8 , 217u8 , 130u8 , 32u8 , 219u8 , 139u8 , 216u8 , 167u8 , 217u8 , 130u8 , 216u8 , 170u8 , 217u8 , 137u8 , 123u8 , 48u8 , 125u8 , 32u8 , 216u8 , 166u8 , 219u8 , 134u8 , 217u8 , 132u8 , 218u8 , 134u8 , 219u8 , 149u8 , 217u8 , 133u8 , 217u8 , 132u8 , 217u8 , 137u8 , 217u8 , 131u8 , 32u8 , 219u8 , 139u8 , 216u8 , 167u8 , 217u8 , 130u8 , 216u8 , 170u8 , 217u8 , 137u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static UK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("час: {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 25u8 , 0u8 , 209u8 , 135u8 , 208u8 , 176u8 , 209u8 , 129u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 208u8 , 187u8 , 209u8 , 150u8 , 209u8 , 130u8 , 208u8 , 189u8 , 209u8 , 150u8 , 208u8 , 185u8 , 209u8 , 135u8 , 208u8 , 176u8 , 209u8 , 129u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 44u8 , 32u8 , 209u8 , 129u8 , 209u8 , 130u8 , 208u8 , 176u8 , 208u8 , 189u8 , 208u8 , 180u8 , 208u8 , 176u8 , 209u8 , 128u8 , 209u8 , 130u8 , 208u8 , 189u8 , 208u8 , 184u8 , 208u8 , 185u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static UR : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT {0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} وقت") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 26u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 218u8 , 136u8 , 219u8 , 146u8 , 32u8 , 217u8 , 132u8 , 216u8 , 167u8 , 216u8 , 166u8 , 217u8 , 185u8 , 32u8 , 217u8 , 185u8 , 216u8 , 167u8 , 216u8 , 166u8 , 217u8 , 133u8 , 123u8 , 48u8 , 125u8 , 32u8 , 217u8 , 133u8 , 216u8 , 185u8 , 219u8 , 140u8 , 216u8 , 167u8 , 216u8 , 177u8 , 219u8 , 140u8 , 32u8 , 217u8 , 136u8 , 217u8 , 130u8 , 216u8 , 170u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static UR_IN : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} وقت") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 216u8 , 175u8 , 217u8 , 134u8 , 32u8 , 218u8 , 169u8 , 216u8 , 167u8 , 32u8 , 217u8 , 136u8 , 217u8 , 130u8 , 216u8 , 170u8 , 123u8 , 48u8 , 125u8 , 32u8 , 217u8 , 133u8 , 216u8 , 185u8 , 219u8 , 140u8 , 216u8 , 167u8 , 216u8 , 177u8 , 219u8 , 140u8 , 32u8 , 217u8 , 136u8 , 217u8 , 130u8 , 216u8 , 170u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static UZ_CYRL : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} вақти") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 31u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 208u8 , 186u8 , 209u8 , 131u8 , 208u8 , 189u8 , 208u8 , 180u8 , 209u8 , 131u8 , 208u8 , 183u8 , 208u8 , 179u8 , 208u8 , 184u8 , 32u8 , 208u8 , 178u8 , 208u8 , 176u8 , 210u8 , 155u8 , 209u8 , 130u8 , 208u8 , 184u8 , 123u8 , 48u8 , 125u8 , 32u8 , 209u8 , 129u8 , 209u8 , 130u8 , 208u8 , 176u8 , 208u8 , 189u8 , 208u8 , 180u8 , 208u8 , 176u8 , 209u8 , 128u8 , 209u8 , 130u8 , 32u8 , 208u8 , 178u8 , 208u8 , 176u8 , 210u8 , 155u8 , 209u8 , 130u8 , 208u8 , 184u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static VI : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Giờ {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 18u8 , 0u8 , 71u8 , 105u8 , 225u8 , 187u8 , 157u8 , 32u8 , 109u8 , 195u8 , 185u8 , 97u8 , 32u8 , 104u8 , 195u8 , 168u8 , 32u8 , 123u8 , 48u8 , 125u8 , 71u8 , 105u8 , 225u8 , 187u8 , 157u8 , 32u8 , 99u8 , 104u8 , 117u8 , 225u8 , 186u8 , 169u8 , 110u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static WAE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0} zit") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static YO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("WAT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("WAT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Ìgbà {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 25u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 195u8 , 128u8 , 107u8 , 195u8 , 179u8 , 107u8 , 195u8 , 178u8 , 32u8 , 111u8 , 106u8 , 195u8 , 186u8 , 109u8 , 225u8 , 187u8 , 141u8 , 109u8 , 225u8 , 187u8 , 141u8 , 123u8 , 48u8 , 125u8 , 32u8 , 195u8 , 140u8 , 108u8 , 195u8 , 160u8 , 110u8 , 195u8 , 160u8 , 32u8 , 195u8 , 128u8 , 107u8 , 195u8 , 179u8 , 107u8 , 195u8 , 178u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static YO_BJ : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("WAT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("WAT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Ìgbà {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 23u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 195u8 , 128u8 , 107u8 , 195u8 , 179u8 , 107u8 , 195u8 , 178u8 , 32u8 , 111u8 , 106u8 , 195u8 , 186u8 , 109u8 , 201u8 , 148u8 , 109u8 , 201u8 , 148u8 , 123u8 , 48u8 , 125u8 , 32u8 , 195u8 , 140u8 , 108u8 , 195u8 , 160u8 , 110u8 , 195u8 , 160u8 , 32u8 , 195u8 , 128u8 , 107u8 , 195u8 , 179u8 , 107u8 , 195u8 , 178u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static YRL_YRL_CO_YRL_VE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Hurariyu {0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 25u8 , 0u8 , 75u8 , 117u8 , 114u8 , 97u8 , 115u8 , 195u8 , 173u8 , 32u8 , 65u8 , 114u8 , 97u8 , 32u8 , 72u8 , 117u8 , 114u8 , 97u8 , 114u8 , 105u8 , 121u8 , 117u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8 , 72u8 , 117u8 , 114u8 , 97u8 , 114u8 , 105u8 , 121u8 , 117u8 , 32u8 , 82u8 , 101u8 , 116u8 , 101u8 , 119u8 , 97u8 , 58u8 , 32u8 , 123u8 , 48u8 , 125u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static YUE_HANS : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}时间") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static YUE_YUE_HANT : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}時間") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 229u8 , 164u8 , 143u8 , 228u8 , 187u8 , 164u8 , 230u8 , 153u8 , 130u8 , 233u8 , 150u8 , 147u8 , 123u8 , 48u8 , 125u8 , 230u8 , 168u8 , 153u8 , 230u8 , 186u8 , 150u8 , 230u8 , 153u8 , 130u8 , 233u8 , 150u8 , 147u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static ZH_HANT : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}時間") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 49u8 , 41u8 , 123u8 , 48u8 , 125u8 , 32u8 , 40u8 , 43u8 , 48u8 , 41u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1}（{0}）") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static ZH_HANT_HK_ZH_HANT_MO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}時間") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 229u8 , 164u8 , 143u8 , 228u8 , 187u8 , 164u8 , 230u8 , 153u8 , 130u8 , 233u8 , 150u8 , 147u8 , 123u8 , 48u8 , 125u8 , 230u8 , 168u8 , 153u8 , 230u8 , 186u8 , 150u8 , 230u8 , 153u8 , 130u8 , 233u8 , 150u8 , 147u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1}（{0}）") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static ZH_ZH_HANS_ZH_HANS_HK_ZH_HANS_MO_ZH_HANS_SG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("{0}时间") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 15u8 , 0u8 , 123u8 , 48u8 , 125u8 , 229u8 , 164u8 , 143u8 , 228u8 , 187u8 , 164u8 , 230u8 , 151u8 , 182u8 , 233u8 , 151u8 , 180u8 , 123u8 , 48u8 , 125u8 , 230u8 , 160u8 , 135u8 , 229u8 , 135u8 , 134u8 , 230u8 , 151u8 , 182u8 , 233u8 , 151u8 , 180u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1}（{0}）") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ; static ZU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: TimeZoneFormatsV1 { hour_format : (alloc :: borrow :: Cow :: Borrowed ("+HH:mm") , alloc :: borrow :: Cow :: Borrowed ("-HH:mm") ,) , gmt_format : alloc :: borrow :: Cow :: Borrowed ("GMT{0}") , gmt_zero_format : alloc :: borrow :: Cow :: Borrowed ("GMT") , region_format : alloc :: borrow :: Cow :: Borrowed ("Isikhathi sase-{0}") , region_format_variants : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [100u8 , 97u8 , 121u8 , 108u8 , 105u8 , 103u8 , 104u8 , 116u8 , 115u8 , 116u8 , 97u8 , 110u8 , 100u8 , 97u8 , 114u8 , 100u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 22u8 , 0u8 , 123u8 , 48u8 , 125u8 , 32u8 , 73u8 , 115u8 , 105u8 , 107u8 , 104u8 , 97u8 , 116u8 , 104u8 , 105u8 , 32u8 , 115u8 , 97u8 , 115u8 , 101u8 , 109u8 , 105u8 , 110u8 , 105u8 , 123u8 , 48u8 , 125u8 , 32u8 , 105u8 , 115u8 , 105u8 , 107u8 , 104u8 , 97u8 , 116u8 , 104u8 , 105u8 , 32u8 , 101u8 , 115u8 , 105u8 , 118u8 , 97u8 , 109u8 , 105u8 , 108u8 , 101u8]) }) } , fallback_format : alloc :: borrow :: Cow :: Borrowed ("{1} ({0})") , gmt_offset_fallback : alloc :: borrow :: Cow :: Borrowed ("GMT+?") , } ;
