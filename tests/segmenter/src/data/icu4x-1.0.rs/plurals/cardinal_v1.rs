// @generated
type DataStruct = < :: icu :: plurals :: provider :: CardinalV1Marker as :: icu_provider :: DataMarker > :: Yokeable ; pub static DATA : litemap :: LiteMap < & str , & DataStruct , & [(& str , & DataStruct)] > = litemap :: LiteMap :: from_sorted_store_unchecked (& [("af" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ak" , AK_BHO_GUW_LN_MG_NSO_PA_TI_WA) , ("am" , AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU) , ("an" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ar" , AR_ARS) , ("ars" , AR_ARS) , ("as" , AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU) , ("asa" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ast" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("az" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("bal" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("be" , BE) , ("bem" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("bez" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("bg" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("bho" , AK_BHO_GUW_LN_MG_NSO_PA_TI_WA) , ("bm" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("bn" , AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU) , ("bo" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("br" , BR) , ("brx" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("bs" , BS_HR_SH_SR) , ("ca" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("ce" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ceb" , CEB_FIL_TL) , ("cgg" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("chr" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ckb" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("cs" , CS_SK) , ("cy" , CY) , ("da" , DA) , ("de" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("doi" , AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU) , ("dsb" , DSB_HSB) , ("dv" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("dz" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("ee" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("el" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("en" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("eo" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("es" , ES) , ("et" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("eu" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("fa" , AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU) , ("ff" , FF_HY_KAB) , ("fi" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("fil" , CEB_FIL_TL) , ("fo" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("fr" , FR) , ("fur" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("fy" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("ga" , GA) , ("gd" , GD) , ("gl" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("gsw" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("gu" , AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU) , ("guw" , AK_BHO_GUW_LN_MG_NSO_PA_TI_WA) , ("gv" , GV) , ("ha" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("haw" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("he" , HE) , ("hi" , AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU) , ("hnj" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("hr" , BS_HR_SH_SR) , ("hsb" , DSB_HSB) , ("hu" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("hy" , FF_HY_KAB) , ("ia" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("id" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("ig" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("ii" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("io" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("is" , IS) , ("it" , IT_PT_PT) , ("iu" , IU_NAQ_SAT_SE_SMA_SMI_SMJ_SMN_SMS) , ("ja" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("jbo" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("jgo" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("jmc" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("jv" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("jw" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("ka" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("kab" , FF_HY_KAB) , ("kaj" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("kcg" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("kde" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("kea" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("kk" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("kkj" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("kl" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("km" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("kn" , AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU) , ("ko" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("ks" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ksb" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ksh" , KSH) , ("ku" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("kw" , KW) , ("ky" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("lag" , LAG) , ("lb" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("lg" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("lij" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("lkt" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("ln" , AK_BHO_GUW_LN_MG_NSO_PA_TI_WA) , ("lo" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("lt" , LT) , ("lv" , LV_PRG) , ("mas" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("mg" , AK_BHO_GUW_LN_MG_NSO_PA_TI_WA) , ("mgo" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("mk" , MK) , ("ml" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("mn" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("mo" , MO_RO) , ("mr" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ms" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("mt" , MT) , ("my" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("nah" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("naq" , IU_NAQ_SAT_SE_SMA_SMI_SMJ_SMN_SMS) , ("nb" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("nd" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ne" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("nl" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("nn" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("nnh" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("no" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("nqo" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("nr" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("nso" , AK_BHO_GUW_LN_MG_NSO_PA_TI_WA) , ("ny" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("nyn" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("om" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("or" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("os" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("osa" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("pa" , AK_BHO_GUW_LN_MG_NSO_PA_TI_WA) , ("pap" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("pcm" , AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU) , ("pl" , PL) , ("prg" , LV_PRG) , ("ps" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("pt" , PT) , ("pt-PT" , IT_PT_PT) , ("rm" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ro" , MO_RO) , ("rof" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ru" , RU_UK) , ("rwk" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("sah" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("saq" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("sat" , IU_NAQ_SAT_SE_SMA_SMI_SMJ_SMN_SMS) , ("sc" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("scn" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("sd" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("sdh" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("se" , IU_NAQ_SAT_SE_SMA_SMI_SMJ_SMN_SMS) , ("seh" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ses" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("sg" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("sh" , BS_HR_SH_SR) , ("shi" , SHI) , ("si" , SI) , ("sk" , CS_SK) , ("sl" , SL) , ("sma" , IU_NAQ_SAT_SE_SMA_SMI_SMJ_SMN_SMS) , ("smi" , IU_NAQ_SAT_SE_SMA_SMI_SMJ_SMN_SMS) , ("smj" , IU_NAQ_SAT_SE_SMA_SMI_SMJ_SMN_SMS) , ("smn" , IU_NAQ_SAT_SE_SMA_SMI_SMJ_SMN_SMS) , ("sms" , IU_NAQ_SAT_SE_SMA_SMI_SMJ_SMN_SMS) , ("sn" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("so" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("sq" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("sr" , BS_HR_SH_SR) , ("ss" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ssy" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("st" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("su" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("sv" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("sw" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("syr" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ta" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("te" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("teo" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("th" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("ti" , AK_BHO_GUW_LN_MG_NSO_PA_TI_WA) , ("tig" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("tk" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("tl" , CEB_FIL_TL) , ("tn" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("to" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("tpi" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("tr" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ts" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("tzm" , TZM) , ("ug" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("uk" , RU_UK) , ("und" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("ur" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("uz" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("ve" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("vi" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("vo" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("vun" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("wa" , AK_BHO_GUW_LN_MG_NSO_PA_TI_WA) , ("wae" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("wo" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("xh" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("xog" , AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG) , ("yi" , AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL) , ("yo" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("yue" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("zh" , BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE) , ("zu" , AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU)]) ; static AF_AN_ASA_AZ_BAL_BEM_BEZ_BG_BRX_CE_CGG : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static AK_BHO_GUW_LN_MG_NSO_PA_TI_WA : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static AM_AS_BN_DOI_FA_GU_HI_KN_PCM_ZU : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 64u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static AR_ARS : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 100u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 99u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static AST_CA_DE_EN_ET_FI_FY_GL_IA_IO_LIJ_NL : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static BE : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 64u8 , 10u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 64u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static BM_BO_DZ_HNJ_ID_IG_II_JA_JBO_JV_JW_KDE : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : None , two : None , few : None , many : None , } ; static BR : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 71u8 , 0u8 , 0u8 , 0u8 , 71u8 , 0u8 , 0u8 , 0u8 , 91u8 , 0u8 , 0u8 , 0u8 , 91u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 72u8 , 0u8 , 0u8 , 0u8 , 72u8 , 0u8 , 0u8 , 0u8 , 92u8 , 0u8 , 0u8 , 0u8 , 92u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 0u8 , 0u8 , 70u8 , 0u8 , 0u8 , 0u8 , 79u8 , 0u8 , 0u8 , 0u8 , 90u8 , 0u8 , 0u8 , 0u8 , 99u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 128u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 64u8 , 66u8 , 15u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static BS_HR_SH_SR : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 52u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 129u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 68u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 132u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 52u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 129u8 , 100u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 0u8 , 0u8 , 68u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 132u8 , 100u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static CEB_FIL_TL : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [6u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 42u8 , 0u8 , 55u8 , 0u8 , 84u8 , 0u8 , 97u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 66u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 129u8 , 10u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 132u8 , 10u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static CS_SK : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 130u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static CY : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static DA : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static DSB_HSB : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 100u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 68u8 , 100u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 100u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 68u8 , 100u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 100u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 68u8 , 100u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static ES : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 52u8 , 0u8 , 199u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 129u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 64u8 , 66u8 , 15u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static FF_HY_KAB : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static FR : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 52u8 , 0u8 , 199u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 129u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 64u8 , 66u8 , 15u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static GA : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static GD : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static GV : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 100u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 0u8 , 0u8 , 40u8 , 0u8 , 0u8 , 0u8 , 40u8 , 0u8 , 0u8 , 0u8 , 60u8 , 0u8 , 0u8 , 0u8 , 60u8 , 0u8 , 0u8 , 0u8 , 80u8 , 0u8 , 0u8 , 0u8 , 80u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 130u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static HE : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 128u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static IS : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [4u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 197u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 129u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static IT_PT_PT : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 52u8 , 0u8 , 199u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 129u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 64u8 , 66u8 , 15u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static IU_NAQ_SAT_SE_SMA_SMI_SMJ_SMN_SMS : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : None , many : None , } ; static KSH : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static KW : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 45u8 , 0u8 , 58u8 , 0u8 , 95u8 , 0u8 , 108u8 , 0u8 , 192u8 , 100u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 22u8 , 0u8 , 0u8 , 0u8 , 22u8 , 0u8 , 0u8 , 0u8 , 42u8 , 0u8 , 0u8 , 0u8 , 42u8 , 0u8 , 0u8 , 0u8 , 62u8 , 0u8 , 0u8 , 0u8 , 62u8 , 0u8 , 0u8 , 0u8 , 82u8 , 0u8 , 0u8 , 0u8 , 82u8 , 0u8 , 0u8 , 0u8 , 64u8 , 232u8 , 3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 160u8 , 134u8 , 1u8 , 0u8 , 232u8 , 3u8 , 0u8 , 0u8 , 32u8 , 78u8 , 0u8 , 0u8 , 64u8 , 156u8 , 0u8 , 0u8 , 64u8 , 156u8 , 0u8 , 0u8 , 96u8 , 234u8 , 0u8 , 0u8 , 96u8 , 234u8 , 0u8 , 0u8 , 128u8 , 56u8 , 1u8 , 0u8 , 128u8 , 56u8 , 1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 64u8 , 66u8 , 15u8 , 0u8 , 160u8 , 134u8 , 1u8 , 0u8 , 160u8 , 134u8 , 1u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 100u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 23u8 , 0u8 , 0u8 , 0u8 , 23u8 , 0u8 , 0u8 , 0u8 , 43u8 , 0u8 , 0u8 , 0u8 , 43u8 , 0u8 , 0u8 , 0u8 , 63u8 , 0u8 , 0u8 , 0u8 , 63u8 , 0u8 , 0u8 , 0u8 , 83u8 , 0u8 , 0u8 , 0u8 , 83u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 128u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 192u8 , 100u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 0u8 , 0u8 , 41u8 , 0u8 , 0u8 , 0u8 , 41u8 , 0u8 , 0u8 , 0u8 , 61u8 , 0u8 , 0u8 , 0u8 , 61u8 , 0u8 , 0u8 , 0u8 , 81u8 , 0u8 , 0u8 , 0u8 , 81u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static LAG : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 128u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static LT : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 132u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static LV_PRG : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [4u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 64u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 0u8 , 0u8 , 66u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 196u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 0u8 , 0u8]) } ,)) , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 52u8 , 0u8 , 65u8 , 0u8 , 78u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 66u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 196u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 132u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 196u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static MK : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 52u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 129u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 68u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 132u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static MO_RO : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 130u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 64u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 64u8 , 100u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static MT : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 64u8 , 100u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 19u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static PL : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 129u8 , 100u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 52u8 , 0u8 , 65u8 , 0u8 , 78u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 129u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 66u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 66u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 100u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static PT : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 52u8 , 0u8 , 199u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 129u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 64u8 , 66u8 , 15u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static RU_UK : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 129u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 129u8 , 100u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [6u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 52u8 , 0u8 , 65u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 66u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 66u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static SHI : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 64u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static SI : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 34u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 65u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 196u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static SL : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 100u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 100u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 194u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 100u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static TZM : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 64u8 , 0u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 99u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ;
