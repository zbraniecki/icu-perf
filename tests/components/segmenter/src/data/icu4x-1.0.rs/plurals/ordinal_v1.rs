// @generated
type DataStruct = < :: icu :: plurals :: provider :: OrdinalV1Marker as :: icu_provider :: DataMarker > :: Yokeable ; pub static DATA : litemap :: LiteMap < & str , & DataStruct , & [(& str , & DataStruct)] > = litemap :: LiteMap :: from_sorted_store_unchecked (& [("af" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("am" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("an" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("ar" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("as" , AS_BN) , ("az" , AZ) , ("bal" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("be" , BE) , ("bg" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("bn" , AS_BN) , ("bs" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("ca" , CA) , ("ce" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("cs" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("cy" , CY) , ("da" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("de" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("dsb" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("el" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("en" , EN) , ("es" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("et" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("eu" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("fa" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("fi" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("fil" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("fr" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("fy" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("ga" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("gd" , GD) , ("gl" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("gsw" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("gu" , GU_HI) , ("he" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("hi" , GU_HI) , ("hr" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("hsb" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("hu" , HU) , ("hy" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("ia" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("id" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("is" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("it" , IT_SC_SCN) , ("ja" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("ka" , KA) , ("kk" , KK) , ("km" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("kn" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("ko" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("kw" , KW) , ("ky" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("lij" , LIJ) , ("lo" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("lt" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("lv" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("mk" , MK) , ("ml" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("mn" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("mo" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("mr" , MR) , ("ms" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("my" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("nb" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("ne" , NE) , ("nl" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("no" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("or" , OR) , ("pa" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("pl" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("prg" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("ps" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("pt" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("ro" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("ru" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("sc" , IT_SC_SCN) , ("scn" , IT_SC_SCN) , ("sd" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("sh" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("si" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("sk" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("sl" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("sq" , SQ) , ("sr" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("sv" , SV) , ("sw" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("ta" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("te" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("th" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("tk" , TK) , ("tl" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("tpi" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("tr" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("uk" , UK) , ("und" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("ur" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("uz" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("vi" , BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI) , ("yue" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("zh" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL) , ("zu" , AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL)]) ; static AF_AM_AN_AR_BG_BS_CE_CS_DA_DE_DSB_EL : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : None , two : None , few : None , many : None , } ; static AS_BN : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static AZ : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 45u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 65u8 , 100u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 0u8 , 0u8 , 50u8 , 0u8 , 0u8 , 0u8 , 50u8 , 0u8 , 0u8 , 0u8 , 70u8 , 0u8 , 0u8 , 0u8 , 70u8 , 0u8 , 0u8 , 0u8 , 80u8 , 0u8 , 0u8 , 0u8 , 80u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 65u8 , 232u8 , 3u8 , 0u8 , 0u8 , 100u8 , 0u8 , 0u8 , 0u8 , 100u8 , 0u8 , 0u8 , 0u8 , 200u8 , 0u8 , 0u8 , 0u8 , 200u8 , 0u8 , 0u8 , 0u8 , 44u8 , 1u8 , 0u8 , 0u8 , 44u8 , 1u8 , 0u8 , 0u8 , 144u8 , 1u8 , 0u8 , 0u8 , 144u8 , 1u8 , 0u8 , 0u8 , 244u8 , 1u8 , 0u8 , 0u8 , 244u8 , 1u8 , 0u8 , 0u8 , 88u8 , 2u8 , 0u8 , 0u8 , 88u8 , 2u8 , 0u8 , 0u8 , 188u8 , 2u8 , 0u8 , 0u8 , 188u8 , 2u8 , 0u8 , 0u8 , 32u8 , 3u8 , 0u8 , 0u8 , 32u8 , 3u8 , 0u8 , 0u8 , 132u8 , 3u8 , 0u8 , 0u8 , 132u8 , 3u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 65u8 , 10u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 65u8 , 100u8 , 0u8 , 0u8 , 0u8 , 40u8 , 0u8 , 0u8 , 0u8 , 40u8 , 0u8 , 0u8 , 0u8 , 60u8 , 0u8 , 0u8 , 0u8 , 60u8 , 0u8 , 0u8 , 0u8 , 90u8 , 0u8 , 0u8 , 0u8 , 90u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static BAL_FIL_FR_GA_HY_LO_MO_MS_RO_TL_VI : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static BE : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : None , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static CA : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static CY : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8]) } ,)) , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static EN : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static GD : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static GU_HI : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static HU : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static IT_SC_SCN : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : None , two : None , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 80u8 , 0u8 , 0u8 , 0u8 , 80u8 , 0u8 , 0u8 , 0u8 , 32u8 , 3u8 , 0u8 , 0u8 , 32u8 , 3u8 , 0u8 , 0u8]) } ,)) , } ; static KA : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 65u8 , 100u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 20u8 , 0u8 , 0u8 , 0u8 , 40u8 , 0u8 , 0u8 , 0u8 , 40u8 , 0u8 , 0u8 , 0u8 , 60u8 , 0u8 , 0u8 , 0u8 , 60u8 , 0u8 , 0u8 , 0u8 , 80u8 , 0u8 , 0u8 , 0u8 , 80u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static KK : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : None , two : None , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [4u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 26u8 , 0u8 , 39u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 64u8 , 10u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 64u8 , 10u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 128u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static KW : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 64u8 , 100u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 0u8 , 0u8 , 24u8 , 0u8 , 0u8 , 0u8 , 41u8 , 0u8 , 0u8 , 0u8 , 44u8 , 0u8 , 0u8 , 0u8 , 61u8 , 0u8 , 0u8 , 0u8 , 64u8 , 0u8 , 0u8 , 0u8 , 81u8 , 0u8 , 0u8 , 0u8 , 84u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 64u8 , 100u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static LIJ : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : None , two : None , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 80u8 , 0u8 , 0u8 , 0u8 , 89u8 , 0u8 , 0u8 , 0u8 , 32u8 , 3u8 , 0u8 , 0u8 , 131u8 , 3u8 , 0u8 , 0u8]) } ,)) , } ; static MK : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 129u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 129u8 , 100u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 193u8 , 10u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 8u8 , 0u8 , 0u8 , 0u8 , 129u8 , 100u8 , 0u8 , 0u8 , 0u8 , 17u8 , 0u8 , 0u8 , 0u8 , 17u8 , 0u8 , 0u8 , 0u8 , 18u8 , 0u8 , 0u8 , 0u8 , 18u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static MR : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static NE : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static OR : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 5u8 , 0u8 , 0u8 , 0u8 , 7u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8]) } ,)) , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static SQ : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 192u8 , 0u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 0u8 , 0u8 , 14u8 , 0u8 , 0u8 , 0u8]) } ,)) , } ; static SV : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 1u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8 , 12u8 , 0u8 , 0u8 , 0u8]) } ,)) , two : None , few : None , many : None , } ; static TK : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : None , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 21u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 6u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 0u8 , 0u8 , 64u8 , 0u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8 , 10u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ; static UK : & DataStruct = & :: icu :: plurals :: provider :: PluralRulesV1 { zero : None , one : None , two : None , few : Some (:: icu :: plurals :: rules :: runtime :: ast :: Rule (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 192u8 , 10u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 0u8 , 0u8 , 128u8 , 100u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 0u8 , 0u8 , 13u8 , 0u8 , 0u8 , 0u8]) } ,)) , many : None , } ;
