// @generated
type DataStruct = < :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1Marker as :: icu_provider :: DataMarker > :: Yokeable ; pub static DATA : litemap :: LiteMap < & str , & DataStruct , & [(& str , & DataStruct)] > = litemap :: LiteMap :: from_sorted_store_unchecked (& [("af" , AF_AF_NA_EE_EE_TG) , ("af-NA" , AF_AF_NA_EE_EE_TG) , ("agq" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ak" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("am" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ar" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-AE" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-BH" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-DJ" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-DZ" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-EG" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-EH" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-ER" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-IL" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-IQ" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-JO" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-KM" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-KW" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-LB" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-LY" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-MA" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-MR" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-OM" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-PS" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-QA" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-SA" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-SD" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-SO" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-SS" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-SY" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-TD" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-TN" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("ar-YE" , AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH) , ("as" , AS) , ("asa" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ast" , AST_EN_EN_AS_EN_BI_EN_PH_EN_PR_EN_UM) , ("az" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("az-Cyrl" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("az-Latn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("bas" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("be" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("be-tarask" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("bem" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("bez" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("bg" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("bm" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("bn" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("bn-IN" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("bo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("bo-IN" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("br" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("brx" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("bs" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("bs-Cyrl" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("bs-Latn" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("ca" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("ca-AD" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("ca-ES-valencia" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("ca-FR" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("ca-IT" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("ccp" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("ccp-IN" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("ce" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ceb" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("cgg" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("chr" , CHR_ES_US) , ("ckb" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ckb-IR" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("cs" , CS) , ("cy" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("da" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("da-GL" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("dav" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("de" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-AT" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-BE" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-CH" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-IT" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-LI" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("de-LU" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("dje" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("doi" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("dsb" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("dua" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("dyo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("dz" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ebu" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ee" , AF_AF_NA_EE_EE_TG) , ("ee-TG" , AF_AF_NA_EE_EE_TG) , ("el" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("el-CY" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("en" , AST_EN_EN_AS_EN_BI_EN_PH_EN_PR_EN_UM) , ("en-001" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-150" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-AE" , EN_AE) , ("en-AG" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-AI" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-AS" , AST_EN_EN_AS_EN_BI_EN_PH_EN_PR_EN_UM) , ("en-AT" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-AU" , EN_AU) , ("en-BB" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-BE" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-BI" , AST_EN_EN_AS_EN_BI_EN_PH_EN_PR_EN_UM) , ("en-BM" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-BS" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-BW" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-BZ" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-CA" , EN_CA) , ("en-CC" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-CH" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-CK" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-CM" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-CX" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-CY" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-DE" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-DG" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-DK" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-DM" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-ER" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-FI" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-FJ" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-FK" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-FM" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-GB" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-GD" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-GG" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-GH" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-GI" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-GM" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-GU" , EN_GU) , ("en-GY" , EN_GY) , ("en-HK" , EN_HK) , ("en-IE" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-IL" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-IM" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-IN" , EN_IN_OR) , ("en-IO" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-JE" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-JM" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-KE" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-KI" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-KN" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-KY" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-LC" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-LR" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-LS" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-MG" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-MH" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-MO" , EN_MO) , ("en-MP" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-MS" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-MT" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-MU" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-MV" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-MW" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-MY" , EN_MY) , ("en-NA" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-NF" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-NG" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-NL" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-NR" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-NU" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-NZ" , EN_NZ) , ("en-PG" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-PH" , AST_EN_EN_AS_EN_BI_EN_PH_EN_PR_EN_UM) , ("en-PK" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-PN" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-PR" , AST_EN_EN_AS_EN_BI_EN_PH_EN_PR_EN_UM) , ("en-PW" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-RW" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-SB" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-SC" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-SD" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-SE" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-SG" , EN_SG_MS_MS_BN_MS_ID_MS_SG) , ("en-SH" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-SI" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("en-SL" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-SS" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-SX" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-SZ" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-TC" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-TK" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-TO" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-TT" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-TV" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-TZ" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-UG" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-UM" , AST_EN_EN_AS_EN_BI_EN_PH_EN_PR_EN_UM) , ("en-VC" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-VG" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-VI" , AST_EN_EN_AS_EN_BI_EN_PH_EN_PR_EN_UM) , ("en-VU" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-WS" , EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS) , ("en-ZA" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-ZM" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("en-ZW" , EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE) , ("eo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("es-419" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-AR" , ES_AR) , ("es-BO" , ES_BO_QU_BO) , ("es-BR" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-BZ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-CL" , ES_CL) , ("es-CO" , ES_CO) , ("es-CR" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-CU" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-DO" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-EA" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("es-EC" , ES_EC_QU_EC) , ("es-GQ" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("es-GT" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-HN" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-IC" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("es-MX" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-NI" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-PA" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-PE" , ES_PE_QU) , ("es-PH" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("es-PR" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-PY" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-SV" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("es-US" , CHR_ES_US) , ("es-UY" , ES_UY) , ("es-VE" , ES_VE) , ("et" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("eu" , EU_GD_NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SX) , ("ewo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fa" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fa-AF" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-BF" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-CM" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-GH" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-GM" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-GW" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-LR" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-MR" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-NE" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-NG" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-SL" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Adlm-SN" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-BF" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-CM" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-GH" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-GM" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-GN" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-GW" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-LR" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-MR" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-NE" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-NG" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ff-Latn-SL" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fi" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fil" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fo-DK" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-BE" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-BF" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-BI" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-BJ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-BL" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-CA" , FR_CA) , ("fr-CD" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-CF" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-CG" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-CH" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-CI" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-CM" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-DJ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-DZ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-GA" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-GF" , FR_GF) , ("fr-GN" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-GP" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-GQ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-HT" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-KM" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-LU" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-MA" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-MC" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-MF" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-MG" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-ML" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-MQ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-MR" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-MU" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-NC" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-NE" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-PF" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-PM" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-RE" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-RW" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-SC" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-SN" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-SY" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-TD" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-TG" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-TN" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-VU" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-WF" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fr-YT" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("fur" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("fy" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("ga" , GA_GA_GB) , ("ga-GB" , GA_GA_GB) , ("gd" , EU_GD_NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SX) , ("gl" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("gsw" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("gsw-FR" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("gsw-LI" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("gu" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("guz" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("gv" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ha" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ha-GH" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ha-NE" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("haw" , HAW) , ("he" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("hi" , HI) , ("hi-Latn" , HI_LATN) , ("hr" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("hr-BA" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("hsb" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("hu" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("hy" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ia" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("id" , ID) , ("ig" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ii" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("is" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("it" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("it-CH" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("it-SM" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("it-VA" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("ja" , JA) , ("jgo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("jmc" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("jv" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ka" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kab" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kam" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kde" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kea" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kgp" , KGP_PT_YRL_YRL_CO_YRL_VE) , ("khq" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ki" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kk" , KK) , ("kkj" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kl" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kln" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("km" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kn" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("ko" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ko-KP" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kok" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("ks" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ks-Arab" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ks-Deva" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ksb" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ksf" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ksh" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("ku" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("kw" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ky" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("lag" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("lb" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("lg" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("lkt" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ln" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ln-AO" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ln-CF" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ln-CG" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("lo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("lrc" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("lrc-IQ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("lt" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("lu" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("luo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("luy" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("lv" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("mai" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mas" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mas-TZ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mer" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mfe" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mg" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mgh" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mgo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mi" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mk" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("ml" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("mn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mni" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mni-Beng" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mr" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("ms" , EN_SG_MS_MS_BN_MS_ID_MS_SG) , ("ms-BN" , EN_SG_MS_MS_BN_MS_ID_MS_SG) , ("ms-ID" , EN_SG_MS_MS_BN_MS_ID_MS_SG) , ("ms-SG" , EN_SG_MS_MS_BN_MS_ID_MS_SG) , ("mt" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("mua" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("my" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("mzn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("naq" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("nb" , NB_NB_SJ_NN_NO) , ("nb-SJ" , NB_NB_SJ_NN_NO) , ("nd" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("nds" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("nds-NL" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ne" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ne-IN" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("nl" , EU_GD_NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SX) , ("nl-AW" , EU_GD_NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SX) , ("nl-BE" , EU_GD_NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SX) , ("nl-BQ" , EU_GD_NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SX) , ("nl-CW" , EU_GD_NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SX) , ("nl-SR" , NL_SR) , ("nl-SX" , EU_GD_NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SX) , ("nmg" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("nn" , NB_NB_SJ_NN_NO) , ("nnh" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("no" , NB_NB_SJ_NN_NO) , ("nus" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("nyn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("om" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("om-KE" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("or" , EN_IN_OR) , ("os" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("os-RU" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("pa" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("pa-Arab" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("pa-Guru" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("pcm" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("pl" , DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM) , ("ps" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ps-PK" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("pt" , KGP_PT_YRL_YRL_CO_YRL_VE) , ("pt-AO" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("pt-CH" , PT_CH_PT_GQ_PT_LU_PT_PT) , ("pt-CV" , PT_CV) , ("pt-GQ" , PT_CH_PT_GQ_PT_LU_PT_PT) , ("pt-GW" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("pt-LU" , PT_CH_PT_GQ_PT_LU_PT_PT) , ("pt-MO" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("pt-MZ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("pt-PT" , PT_CH_PT_GQ_PT_LU_PT_PT) , ("pt-ST" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("pt-TL" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("qu" , ES_PE_QU) , ("qu-BO" , ES_BO_QU_BO) , ("qu-EC" , ES_EC_QU_EC) , ("rm" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("rn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ro" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("ro-MD" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("rof" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ru" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ru-BY" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ru-KG" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ru-KZ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ru-MD" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ru-UA" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("rw" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("rwk" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sa" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sah" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("saq" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sat" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sat-Olck" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sbp" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sc" , SC) , ("sd" , SD_SD_ARAB) , ("sd-Arab" , SD_SD_ARAB) , ("sd-Deva" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("se" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("se-FI" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("se-SE" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("seh" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ses" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sg" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("shi" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("shi-Latn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("shi-Tfng" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("si" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sk" , SK) , ("sl" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("smn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("so" , SO_SO_DJ_SO_ET_SO_KE) , ("so-DJ" , SO_SO_DJ_SO_ET_SO_KE) , ("so-ET" , SO_SO_DJ_SO_ET_SO_KE) , ("so-KE" , SO_SO_DJ_SO_ET_SO_KE) , ("sq" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sq-MK" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sq-XK" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sr" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("sr-Cyrl" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("sr-Cyrl-BA" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("sr-Cyrl-ME" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("sr-Cyrl-XK" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("sr-Latn" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("sr-Latn-BA" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("sr-Latn-ME" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("sr-Latn-XK" , BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR) , ("su" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("su-Latn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sv" , SV_SV_AX_SV_FI) , ("sv-AX" , SV_SV_AX_SV_FI) , ("sv-FI" , SV_SV_AX_SV_FI) , ("sw" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sw-CD" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sw-KE" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("sw-UG" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ta" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("ta-LK" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("ta-MY" , TA_MY_TA_SG_ZH_HANS_SG) , ("ta-SG" , TA_MY_TA_SG_ZH_HANS_SG) , ("te" , BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML) , ("teo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("teo-KE" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("tg" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("th" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ti" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ti-ER" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("tk" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("to" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("tr" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("tr-CY" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("tt" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("twq" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("tzm" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ug" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("uk" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("und" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ur" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("ur-IN" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("uz" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("uz-Arab" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("uz-Cyrl" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("uz-Latn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("vai" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("vai-Latn" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("vai-Vaii" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("vi" , VI) , ("vun" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("wae" , DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU) , ("wo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("xh" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("xog" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("yav" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("yi" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("yo" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("yo-BJ" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("yrl" , KGP_PT_YRL_YRL_CO_YRL_VE) , ("yrl-CO" , KGP_PT_YRL_YRL_CO_YRL_VE) , ("yrl-VE" , KGP_PT_YRL_YRL_CO_YRL_VE) , ("yue" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("yue-Hans" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("yue-Hant" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("zgh" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("zh" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("zh-Hans" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("zh-Hans-HK" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("zh-Hans-MO" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS) , ("zh-Hans-SG" , TA_MY_TA_SG_ZH_HANS_SG) , ("zh-Hant" , ZH_HANT_ZH_HANT_HK_ZH_HANT_MO) , ("zh-Hant-HK" , ZH_HANT_ZH_HANT_HK_ZH_HANT_MO) , ("zh-Hant-MO" , ZH_HANT_ZH_HANT_HK_ZH_HANT_MO) , ("zu" , AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS)]) ; static AF_AF_NA_EE_EE_TG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 102u8 , 99u8 , 101u8 , 97u8 , 102u8 , 101u8 , 97u8 , 97u8 , 102u8 , 115u8 , 111u8 , 97u8 , 102u8 , 119u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [4u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 10u8 , 0u8 , 67u8 , 65u8 , 84u8 , 69u8 , 65u8 , 84u8 , 83u8 , 65u8 , 83u8 , 84u8 , 87u8 , 65u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static AGQ_AK_AM_ASA_AZ_AZ_CYRL_AZ_LATN_BAS : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& []) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& []) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static AR_AR_AE_AR_BH_AR_DJ_AR_DZ_AR_EG_AR_EH : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [103u8 , 117u8 , 108u8 , 102u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 71u8 , 83u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static AS : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [105u8 , 110u8 , 100u8 , 105u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 224u8 , 166u8 , 173u8 , 224u8 , 166u8 , 190u8 , 46u8 , 32u8 , 224u8 , 166u8 , 184u8 , 46u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static AST_EN_EN_AS_EN_BI_EN_PH_EN_PR_EN_UM : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 104u8 , 97u8 , 97u8 , 108u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [8u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 9u8 , 0u8 , 11u8 , 0u8 , 13u8 , 0u8 , 16u8 , 0u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 84u8 , 72u8 , 65u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static BN_BN_IN_BRX_CCP_CCP_IN_GU_KN_KOK_ML : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [105u8 , 110u8 , 100u8 , 105u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 73u8 , 83u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static BS_BS_LATN_CA_CA_AD_CA_ES_VALENCIA_CA_FR : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [101u8 , 117u8 , 99u8 , 101u8 , 101u8 , 117u8 , 101u8 , 97u8 , 101u8 , 117u8 , 119u8 , 101u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [4u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 9u8 , 0u8 , 67u8 , 69u8 , 84u8 , 69u8 , 69u8 , 84u8 , 87u8 , 69u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static CHR_ES_US : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 104u8 , 97u8 , 97u8 , 108u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 9u8 , 0u8 , 11u8 , 0u8 , 13u8 , 0u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 84u8 , 72u8 , 65u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static CS : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 101u8 , 117u8 , 99u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 9u8 , 0u8 , 11u8 , 0u8 , 13u8 , 0u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 84u8 , 83u8 , 69u8 , 196u8 , 140u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static DA_DA_GL_EL_EL_CY_FY_IT_IT_CH_IT_SM : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [101u8 , 117u8 , 99u8 , 101u8 , 101u8 , 117u8 , 101u8 , 97u8 , 101u8 , 117u8 , 119u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 67u8 , 69u8 , 84u8 , 69u8 , 69u8 , 84u8 , 87u8 , 69u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static DE_DE_AT_DE_BE_DE_CH_DE_IT_DE_LI_DE_LU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [101u8 , 117u8 , 99u8 , 101u8 , 101u8 , 117u8 , 101u8 , 97u8 , 101u8 , 117u8 , 119u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 77u8 , 69u8 , 90u8 , 79u8 , 69u8 , 90u8 , 87u8 , 69u8 , 90u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_001_EN_AG_EN_AI_EN_BB_EN_BM_EN_BS : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_AE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [103u8 , 117u8 , 108u8 , 102u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 71u8 , 83u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_AU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 117u8 , 99u8 , 101u8 , 97u8 , 117u8 , 99u8 , 119u8 , 97u8 , 117u8 , 101u8 , 97u8 , 97u8 , 117u8 , 119u8 , 101u8 , 108u8 , 111u8 , 104u8 , 111u8 , 109u8 , 103u8 , 109u8 , 116u8 , 110u8 , 101u8 , 122u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 7u8 , 0u8 , 10u8 , 0u8 , 13u8 , 0u8 , 16u8 , 0u8 , 19u8 , 0u8 , 65u8 , 67u8 , 84u8 , 65u8 , 67u8 , 87u8 , 84u8 , 65u8 , 69u8 , 84u8 , 65u8 , 87u8 , 84u8 , 76u8 , 72u8 , 84u8 , 71u8 , 77u8 , 84u8 , 78u8 , 90u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_BW_EN_CM_EN_ER_EN_GH_EN_GM_EN_KE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 102u8 , 99u8 , 101u8 , 97u8 , 102u8 , 101u8 , 97u8 , 97u8 , 102u8 , 115u8 , 111u8 , 97u8 , 102u8 , 119u8 , 101u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 10u8 , 0u8 , 13u8 , 0u8 , 67u8 , 65u8 , 84u8 , 69u8 , 65u8 , 84u8 , 83u8 , 65u8 , 83u8 , 84u8 , 87u8 , 65u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_CA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 102u8 , 103u8 , 104u8 , 97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 114u8 , 103u8 , 101u8 , 97u8 , 116u8 , 108u8 , 97u8 , 97u8 , 117u8 , 99u8 , 119u8 , 97u8 , 117u8 , 101u8 , 97u8 , 97u8 , 117u8 , 119u8 , 101u8 , 98u8 , 97u8 , 110u8 , 103u8 , 98u8 , 104u8 , 117u8 , 116u8 , 98u8 , 114u8 , 97u8 , 115u8 , 98u8 , 114u8 , 117u8 , 110u8 , 99u8 , 104u8 , 97u8 , 116u8 , 99u8 , 104u8 , 114u8 , 105u8 , 99u8 , 111u8 , 99u8 , 111u8 , 101u8 , 97u8 , 115u8 , 116u8 , 101u8 , 97u8 , 116u8 , 105u8 , 101u8 , 99u8 , 117u8 , 97u8 , 102u8 , 97u8 , 108u8 , 107u8 , 103u8 , 97u8 , 108u8 , 97u8 , 103u8 , 114u8 , 101u8 , 97u8 , 103u8 , 117u8 , 121u8 , 97u8 , 104u8 , 97u8 , 97u8 , 108u8 , 105u8 , 110u8 , 99u8 , 101u8 , 105u8 , 110u8 , 100u8 , 105u8 , 105u8 , 110u8 , 100u8 , 111u8 , 105u8 , 110u8 , 101u8 , 97u8 , 105u8 , 110u8 , 119u8 , 101u8 , 105u8 , 114u8 , 97u8 , 110u8 , 109u8 , 97u8 , 108u8 , 97u8 , 109u8 , 97u8 , 108u8 , 100u8 , 109u8 , 103u8 , 109u8 , 116u8 , 110u8 , 101u8 , 112u8 , 97u8 , 110u8 , 101u8 , 119u8 , 102u8 , 110u8 , 111u8 , 114u8 , 111u8 , 112u8 , 97u8 , 107u8 , 105u8 , 112u8 , 97u8 , 114u8 , 97u8 , 112u8 , 101u8 , 114u8 , 117u8 , 112u8 , 105u8 , 109u8 , 105u8 , 117u8 , 114u8 , 117u8 , 103u8 , 118u8 , 101u8 , 110u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [44u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 8u8 , 0u8 , 10u8 , 0u8 , 12u8 , 0u8 , 14u8 , 0u8 , 17u8 , 0u8 , 19u8 , 0u8 , 23u8 , 0u8 , 26u8 , 0u8 , 30u8 , 0u8 , 33u8 , 0u8 , 36u8 , 0u8 , 39u8 , 0u8 , 42u8 , 0u8 , 47u8 , 0u8 , 50u8 , 0u8 , 53u8 , 0u8 , 57u8 , 0u8 , 60u8 , 0u8 , 63u8 , 0u8 , 66u8 , 0u8 , 70u8 , 0u8 , 73u8 , 0u8 , 76u8 , 0u8 , 79u8 , 0u8 , 83u8 , 0u8 , 86u8 , 0u8 , 89u8 , 0u8 , 92u8 , 0u8 , 95u8 , 0u8 , 99u8 , 0u8 , 102u8 , 0u8 , 105u8 , 0u8 , 108u8 , 0u8 , 111u8 , 0u8 , 113u8 , 0u8 , 116u8 , 0u8 , 119u8 , 0u8 , 122u8 , 0u8 , 125u8 , 0u8 , 128u8 , 0u8 , 131u8 , 0u8 , 65u8 , 70u8 , 84u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 82u8 , 84u8 , 65u8 , 84u8 , 65u8 , 67u8 , 87u8 , 84u8 , 65u8 , 69u8 , 84u8 , 65u8 , 87u8 , 83u8 , 84u8 , 66u8 , 83u8 , 84u8 , 66u8 , 84u8 , 84u8 , 66u8 , 82u8 , 84u8 , 66u8 , 78u8 , 84u8 , 67u8 , 72u8 , 65u8 , 83u8 , 84u8 , 67u8 , 88u8 , 84u8 , 67u8 , 67u8 , 84u8 , 69u8 , 65u8 , 83u8 , 84u8 , 84u8 , 76u8 , 84u8 , 69u8 , 67u8 , 84u8 , 70u8 , 75u8 , 84u8 , 71u8 , 65u8 , 76u8 , 84u8 , 69u8 , 71u8 , 84u8 , 71u8 , 89u8 , 84u8 , 72u8 , 65u8 , 84u8 , 87u8 , 73u8 , 84u8 , 65u8 , 73u8 , 83u8 , 84u8 , 73u8 , 67u8 , 84u8 , 87u8 , 73u8 , 84u8 , 87u8 , 73u8 , 66u8 , 73u8 , 82u8 , 83u8 , 84u8 , 77u8 , 89u8 , 84u8 , 77u8 , 86u8 , 84u8 , 71u8 , 77u8 , 84u8 , 78u8 , 80u8 , 84u8 , 78u8 , 84u8 , 70u8 , 78u8 , 84u8 , 80u8 , 75u8 , 84u8 , 80u8 , 89u8 , 84u8 , 80u8 , 69u8 , 84u8 , 80u8 , 77u8 , 84u8 , 85u8 , 89u8 , 84u8 , 86u8 , 69u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_GU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 99u8 , 104u8 , 97u8 , 109u8 , 104u8 , 97u8 , 97u8 , 108u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [9u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 9u8 , 0u8 , 11u8 , 0u8 , 13u8 , 0u8 , 17u8 , 0u8 , 20u8 , 0u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 84u8 , 67u8 , 104u8 , 83u8 , 84u8 , 72u8 , 65u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_GY : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [103u8 , 117u8 , 121u8 , 97u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 71u8 , 89u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_HK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [104u8 , 111u8 , 107u8 , 111u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 75u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_IN_OR : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [105u8 , 110u8 , 100u8 , 105u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 73u8 , 83u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_MO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [104u8 , 111u8 , 107u8 , 111u8 , 109u8 , 97u8 , 99u8 , 97u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 72u8 , 75u8 , 84u8 , 77u8 , 83u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_MY : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [109u8 , 97u8 , 108u8 , 97u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 77u8 , 89u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_NZ : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 117u8 , 99u8 , 101u8 , 97u8 , 117u8 , 99u8 , 119u8 , 97u8 , 117u8 , 101u8 , 97u8 , 97u8 , 117u8 , 119u8 , 101u8 , 99u8 , 104u8 , 97u8 , 116u8 , 108u8 , 111u8 , 104u8 , 111u8 , 109u8 , 103u8 , 109u8 , 116u8 , 110u8 , 101u8 , 122u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [8u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 7u8 , 0u8 , 10u8 , 0u8 , 13u8 , 0u8 , 17u8 , 0u8 , 20u8 , 0u8 , 23u8 , 0u8 , 65u8 , 67u8 , 84u8 , 65u8 , 67u8 , 87u8 , 84u8 , 65u8 , 69u8 , 84u8 , 65u8 , 87u8 , 84u8 , 67u8 , 72u8 , 65u8 , 84u8 , 76u8 , 72u8 , 84u8 , 71u8 , 77u8 , 84u8 , 78u8 , 90u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EN_SG_MS_MS_BN_MS_ID_MS_SG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [109u8 , 97u8 , 108u8 , 97u8 , 109u8 , 103u8 , 109u8 , 116u8 , 115u8 , 105u8 , 110u8 , 103u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 77u8 , 89u8 , 84u8 , 71u8 , 77u8 , 84u8 , 83u8 , 71u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static ES_AR : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 114u8 , 103u8 , 101u8 , 97u8 , 114u8 , 119u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 65u8 , 82u8 , 84u8 , 87u8 , 65u8 , 82u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static ES_BO_QU_BO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [98u8 , 111u8 , 108u8 , 105u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 66u8 , 79u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static ES_CL : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [99u8 , 104u8 , 105u8 , 108u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 67u8 , 76u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static ES_CO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [99u8 , 111u8 , 108u8 , 111u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 67u8 , 79u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static ES_EC_QU_EC : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [101u8 , 99u8 , 117u8 , 97u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 69u8 , 67u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static ES_PE_QU : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [112u8 , 101u8 , 114u8 , 117u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 80u8 , 69u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static ES_UY : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 114u8 , 117u8 , 103u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 89u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static ES_VE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [118u8 , 101u8 , 110u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 86u8 , 69u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static EU_GD_NL_NL_AW_NL_BE_NL_BQ_NL_CW_NL_SX : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 101u8 , 117u8 , 99u8 , 101u8 , 101u8 , 117u8 , 101u8 , 97u8 , 101u8 , 117u8 , 119u8 , 101u8 , 104u8 , 97u8 , 97u8 , 108u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [11u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 9u8 , 0u8 , 11u8 , 0u8 , 13u8 , 0u8 , 16u8 , 0u8 , 19u8 , 0u8 , 22u8 , 0u8 , 25u8 , 0u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 84u8 , 67u8 , 69u8 , 84u8 , 69u8 , 69u8 , 84u8 , 87u8 , 69u8 , 84u8 , 72u8 , 65u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static FR_CA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 110u8 , 101u8 , 119u8 , 102u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 2u8 , 0u8 , 4u8 , 0u8 , 6u8 , 0u8 , 8u8 , 0u8 , 72u8 , 67u8 , 72u8 , 69u8 , 72u8 , 82u8 , 72u8 , 80u8 , 72u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static FR_GF : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [102u8 , 114u8 , 103u8 , 117u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 71u8 , 70u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static GA_GA_GB : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 109u8 , 112u8 , 97u8 , 101u8 , 117u8 , 99u8 , 101u8 , 101u8 , 117u8 , 101u8 , 97u8 , 101u8 , 117u8 , 119u8 , 101u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [5u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 9u8 , 0u8 , 12u8 , 0u8 , 65u8 , 65u8 , 67u8 , 67u8 , 69u8 , 84u8 , 69u8 , 69u8 , 84u8 , 87u8 , 69u8 , 84u8 , 77u8 , 65u8 , 71u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static HAW : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 104u8 , 97u8 , 97u8 , 108u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 65u8 , 75u8 , 84u8 , 72u8 , 65u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static HI : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [105u8 , 110u8 , 100u8 , 105u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 73u8 , 83u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 18u8 , 0u8 , 224u8 , 164u8 , 143u8 , 224u8 , 164u8 , 154u8 , 224u8 , 164u8 , 143u8 , 224u8 , 164u8 , 184u8 , 224u8 , 164u8 , 159u8 , 224u8 , 165u8 , 128u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static HI_LATN : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [105u8 , 110u8 , 100u8 , 105u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 73u8 , 83u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static ID : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 99u8 , 117u8 , 98u8 , 97u8 , 103u8 , 114u8 , 101u8 , 97u8 , 104u8 , 97u8 , 97u8 , 108u8 , 105u8 , 110u8 , 99u8 , 101u8 , 105u8 , 110u8 , 101u8 , 97u8 , 105u8 , 110u8 , 119u8 , 101u8 , 110u8 , 101u8 , 119u8 , 102u8 , 112u8 , 105u8 , 109u8 , 105u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [14u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 9u8 , 0u8 , 11u8 , 0u8 , 13u8 , 0u8 , 22u8 , 0u8 , 25u8 , 0u8 , 28u8 , 0u8 , 32u8 , 0u8 , 35u8 , 0u8 , 38u8 , 0u8 , 40u8 , 0u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 84u8 , 67u8 , 84u8 , 32u8 , 40u8 , 75u8 , 117u8 , 98u8 , 97u8 , 41u8 , 69u8 , 71u8 , 84u8 , 72u8 , 65u8 , 84u8 , 87u8 , 73u8 , 84u8 , 65u8 , 87u8 , 73u8 , 84u8 , 87u8 , 73u8 , 66u8 , 78u8 , 84u8 , 80u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static JA : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [106u8 , 97u8 , 112u8 , 97u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 74u8 , 83u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static KGP_PT_YRL_YRL_CO_YRL_VE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 99u8 , 114u8 , 101u8 , 97u8 , 109u8 , 97u8 , 122u8 , 98u8 , 114u8 , 97u8 , 115u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [3u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 65u8 , 67u8 , 84u8 , 65u8 , 77u8 , 84u8 , 66u8 , 82u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static KK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [101u8 , 117u8 , 101u8 , 97u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 69u8 , 69u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static NB_NB_SJ_NN_NO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 101u8 , 117u8 , 99u8 , 101u8 , 101u8 , 117u8 , 101u8 , 97u8 , 101u8 , 117u8 , 119u8 , 101u8 , 104u8 , 97u8 , 97u8 , 108u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [11u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 9u8 , 0u8 , 11u8 , 0u8 , 13u8 , 0u8 , 16u8 , 0u8 , 19u8 , 0u8 , 22u8 , 0u8 , 25u8 , 0u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 84u8 , 67u8 , 69u8 , 84u8 , 69u8 , 69u8 , 84u8 , 87u8 , 69u8 , 84u8 , 72u8 , 65u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static NL_SR : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 101u8 , 117u8 , 99u8 , 101u8 , 101u8 , 117u8 , 101u8 , 97u8 , 101u8 , 117u8 , 119u8 , 101u8 , 104u8 , 97u8 , 97u8 , 108u8 , 109u8 , 103u8 , 109u8 , 116u8 , 115u8 , 117u8 , 114u8 , 105u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [12u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 9u8 , 0u8 , 11u8 , 0u8 , 13u8 , 0u8 , 16u8 , 0u8 , 19u8 , 0u8 , 22u8 , 0u8 , 25u8 , 0u8 , 28u8 , 0u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 84u8 , 67u8 , 69u8 , 84u8 , 69u8 , 69u8 , 84u8 , 87u8 , 69u8 , 84u8 , 72u8 , 65u8 , 84u8 , 71u8 , 77u8 , 84u8 , 83u8 , 82u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static PT_CH_PT_GQ_PT_LU_PT_PT : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 122u8 , 111u8 , 114u8 , 101u8 , 117u8 , 99u8 , 101u8 , 101u8 , 117u8 , 101u8 , 97u8 , 101u8 , 117u8 , 119u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [4u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 4u8 , 0u8 , 7u8 , 0u8 , 10u8 , 0u8 , 65u8 , 90u8 , 79u8 , 84u8 , 67u8 , 69u8 , 84u8 , 69u8 , 69u8 , 84u8 , 87u8 , 69u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static PT_CV : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 122u8 , 111u8 , 114u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 65u8 , 90u8 , 79u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static SC : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 10u8 , 0u8 , 12u8 , 0u8 , 14u8 , 0u8 , 79u8 , 65u8 , 75u8 , 79u8 , 84u8 , 79u8 , 79u8 , 79u8 , 77u8 , 80u8 , 79u8 , 80u8 , 79u8 , 65u8 , 79u8 , 77u8 , 71u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 79u8 , 73u8 , 72u8 , 84u8 , 67u8 , 85u8]) }) } , } ; static SD_SD_ARAB : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& []) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& []) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 217u8 , 133u8 , 32u8 , 216u8 , 185u8 , 32u8 , 217u8 , 136u8]) }) } , } ; static SK : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [101u8 , 117u8 , 99u8 , 101u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 83u8 , 69u8 , 196u8 , 140u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static SO_SO_DJ_SO_ET_SO_KE : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [104u8 , 97u8 , 97u8 , 108u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 72u8 , 65u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 87u8 , 97u8 , 113u8 , 116u8 , 105u8 , 103u8 , 97u8 , 32u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static SV_SV_AX_SV_FI : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [101u8 , 117u8 , 99u8 , 101u8 , 101u8 , 117u8 , 101u8 , 97u8 , 101u8 , 117u8 , 119u8 , 101u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [4u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 6u8 , 0u8 , 9u8 , 0u8 , 67u8 , 69u8 , 84u8 , 69u8 , 69u8 , 84u8 , 87u8 , 69u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 11u8 , 0u8 , 72u8 , 111u8 , 110u8 , 111u8 , 108u8 , 117u8 , 108u8 , 117u8 , 116u8 , 105u8 , 100u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static TA_MY_TA_SG_ZH_HANS_SG : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [109u8 , 97u8 , 108u8 , 97u8 , 115u8 , 105u8 , 110u8 , 103u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 77u8 , 89u8 , 84u8 , 83u8 , 71u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static VI : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 104u8 , 97u8 , 97u8 , 108u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [7u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 9u8 , 0u8 , 11u8 , 0u8 , 13u8 , 0u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 84u8 , 72u8 , 65u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 115u8 , 104u8 , 110u8 , 108u8 , 0u8 , 0u8 , 0u8 , 117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [2u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 9u8 , 0u8 , 71u8 , 105u8 , 225u8 , 187u8 , 157u8 , 32u8 , 72u8 , 83u8 , 84u8 , 85u8 , 84u8 , 67u8]) }) } , } ; static ZH_HANT_ZH_HANT_HK_ZH_HANT_MO : & DataStruct = & :: icu :: datetime :: provider :: time_zones :: MetazoneGenericNamesShortV1 { defaults : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [97u8 , 108u8 , 97u8 , 115u8 , 97u8 , 109u8 , 99u8 , 101u8 , 97u8 , 109u8 , 101u8 , 97u8 , 97u8 , 109u8 , 109u8 , 111u8 , 97u8 , 109u8 , 112u8 , 97u8 , 97u8 , 116u8 , 108u8 , 97u8 , 104u8 , 97u8 , 97u8 , 108u8 , 109u8 , 103u8 , 109u8 , 116u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [8u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 3u8 , 0u8 , 5u8 , 0u8 , 7u8 , 0u8 , 9u8 , 0u8 , 11u8 , 0u8 , 13u8 , 0u8 , 16u8 , 0u8 , 65u8 , 75u8 , 84u8 , 67u8 , 84u8 , 69u8 , 84u8 , 77u8 , 84u8 , 80u8 , 84u8 , 65u8 , 84u8 , 72u8 , 65u8 , 84u8 , 71u8 , 77u8 , 84u8]) }) } , overrides : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (& [117u8 , 116u8 , 99u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8]) } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (& [1u8 , 0u8 , 0u8 , 0u8 , 0u8 , 0u8 , 85u8 , 84u8 , 67u8]) }) } , } ;
