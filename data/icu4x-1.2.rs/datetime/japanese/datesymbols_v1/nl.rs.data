:: icu::datetime :: provider :: calendar :: DateSymbolsV1 { months : :: icu::datetime :: provider :: calendar :: months :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: months :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("jan") , alloc :: borrow :: Cow :: Borrowed ("feb") , alloc :: borrow :: Cow :: Borrowed ("mrt") , alloc :: borrow :: Cow :: Borrowed ("apr") , alloc :: borrow :: Cow :: Borrowed ("mei") , alloc :: borrow :: Cow :: Borrowed ("jun") , alloc :: borrow :: Cow :: Borrowed ("jul") , alloc :: borrow :: Cow :: Borrowed ("aug") , alloc :: borrow :: Cow :: Borrowed ("sep") , alloc :: borrow :: Cow :: Borrowed ("okt") , alloc :: borrow :: Cow :: Borrowed ("nov") , alloc :: borrow :: Cow :: Borrowed ("dec") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("F") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("A") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("A") , alloc :: borrow :: Cow :: Borrowed ("S") , alloc :: borrow :: Cow :: Borrowed ("O") , alloc :: borrow :: Cow :: Borrowed ("N") , alloc :: borrow :: Cow :: Borrowed ("D") ,] ,) , short : None , wide : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("januari") , alloc :: borrow :: Cow :: Borrowed ("februari") , alloc :: borrow :: Cow :: Borrowed ("maart") , alloc :: borrow :: Cow :: Borrowed ("april") , alloc :: borrow :: Cow :: Borrowed ("mei") , alloc :: borrow :: Cow :: Borrowed ("juni") , alloc :: borrow :: Cow :: Borrowed ("juli") , alloc :: borrow :: Cow :: Borrowed ("augustus") , alloc :: borrow :: Cow :: Borrowed ("september") , alloc :: borrow :: Cow :: Borrowed ("oktober") , alloc :: borrow :: Cow :: Borrowed ("november") , alloc :: borrow :: Cow :: Borrowed ("december") ,] ,) , } , stand_alone : None , } , weekdays : :: icu::datetime :: provider :: calendar :: weekdays :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: weekdays :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("zo") , alloc :: borrow :: Cow :: Borrowed ("ma") , alloc :: borrow :: Cow :: Borrowed ("di") , alloc :: borrow :: Cow :: Borrowed ("wo") , alloc :: borrow :: Cow :: Borrowed ("do") , alloc :: borrow :: Cow :: Borrowed ("vr") , alloc :: borrow :: Cow :: Borrowed ("za") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("Z") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("D") , alloc :: borrow :: Cow :: Borrowed ("W") , alloc :: borrow :: Cow :: Borrowed ("D") , alloc :: borrow :: Cow :: Borrowed ("V") , alloc :: borrow :: Cow :: Borrowed ("Z") ,] ,) , short : Some (:: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("zo") , alloc :: borrow :: Cow :: Borrowed ("ma") , alloc :: borrow :: Cow :: Borrowed ("di") , alloc :: borrow :: Cow :: Borrowed ("wo") , alloc :: borrow :: Cow :: Borrowed ("do") , alloc :: borrow :: Cow :: Borrowed ("vr") , alloc :: borrow :: Cow :: Borrowed ("za") ,] ,)) , wide : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("zondag") , alloc :: borrow :: Cow :: Borrowed ("maandag") , alloc :: borrow :: Cow :: Borrowed ("dinsdag") , alloc :: borrow :: Cow :: Borrowed ("woensdag") , alloc :: borrow :: Cow :: Borrowed ("donderdag") , alloc :: borrow :: Cow :: Borrowed ("vrijdag") , alloc :: borrow :: Cow :: Borrowed ("zaterdag") ,] ,) , } , stand_alone : None , } , eras : :: icu::datetime :: provider :: calendar :: Eras { names : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x03\0\x05\0\x0B\0\x10\0\x15\0\x1A\0bceceheiseimeijireiwashowataisho") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\r\0\x18\0\x1E\0#\0(\0.\0voor Christusna ChristusHeiseiMeijiReiwaSh\xC5\x8DwaTaish\xC5\x8D") }) } , abbr : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x03\0\x05\0\x0B\0\x10\0\x15\0\x1A\0bceceheiseimeijireiwashowataisho") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x06\0\x0C\0\x12\0\x17\0\x1C\0\"\0v.Chr.n.Chr.HeiseiMeijiReiwaSh\xC5\x8DwaTaish\xC5\x8D") }) } , narrow : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x03\0\x05\0\x0B\0\x10\0\x15\0\x1A\0bceceheiseimeijireiwashowataisho") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x04\0\x08\0\t\0\n\0\x0B\0\x0C\0v.C.n.C.HMRST") }) } , } , }