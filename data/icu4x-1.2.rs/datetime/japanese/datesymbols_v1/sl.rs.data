:: icu::datetime :: provider :: calendar :: DateSymbolsV1 { months : :: icu::datetime :: provider :: calendar :: months :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: months :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("jan.") , alloc :: borrow :: Cow :: Borrowed ("feb.") , alloc :: borrow :: Cow :: Borrowed ("mar.") , alloc :: borrow :: Cow :: Borrowed ("apr.") , alloc :: borrow :: Cow :: Borrowed ("maj") , alloc :: borrow :: Cow :: Borrowed ("jun.") , alloc :: borrow :: Cow :: Borrowed ("jul.") , alloc :: borrow :: Cow :: Borrowed ("avg.") , alloc :: borrow :: Cow :: Borrowed ("sep.") , alloc :: borrow :: Cow :: Borrowed ("okt.") , alloc :: borrow :: Cow :: Borrowed ("nov.") , alloc :: borrow :: Cow :: Borrowed ("dec.") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("j") , alloc :: borrow :: Cow :: Borrowed ("f") , alloc :: borrow :: Cow :: Borrowed ("m") , alloc :: borrow :: Cow :: Borrowed ("a") , alloc :: borrow :: Cow :: Borrowed ("m") , alloc :: borrow :: Cow :: Borrowed ("j") , alloc :: borrow :: Cow :: Borrowed ("j") , alloc :: borrow :: Cow :: Borrowed ("a") , alloc :: borrow :: Cow :: Borrowed ("s") , alloc :: borrow :: Cow :: Borrowed ("o") , alloc :: borrow :: Cow :: Borrowed ("n") , alloc :: borrow :: Cow :: Borrowed ("d") ,] ,) , short : None , wide : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("januar") , alloc :: borrow :: Cow :: Borrowed ("februar") , alloc :: borrow :: Cow :: Borrowed ("marec") , alloc :: borrow :: Cow :: Borrowed ("april") , alloc :: borrow :: Cow :: Borrowed ("maj") , alloc :: borrow :: Cow :: Borrowed ("junij") , alloc :: borrow :: Cow :: Borrowed ("julij") , alloc :: borrow :: Cow :: Borrowed ("avgust") , alloc :: borrow :: Cow :: Borrowed ("september") , alloc :: borrow :: Cow :: Borrowed ("oktober") , alloc :: borrow :: Cow :: Borrowed ("november") , alloc :: borrow :: Cow :: Borrowed ("december") ,] ,) , } , stand_alone : None , } , weekdays : :: icu::datetime :: provider :: calendar :: weekdays :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: weekdays :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("ned.") , alloc :: borrow :: Cow :: Borrowed ("pon.") , alloc :: borrow :: Cow :: Borrowed ("tor.") , alloc :: borrow :: Cow :: Borrowed ("sre.") , alloc :: borrow :: Cow :: Borrowed ("훾et.") , alloc :: borrow :: Cow :: Borrowed ("pet.") , alloc :: borrow :: Cow :: Borrowed ("sob.") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("n") , alloc :: borrow :: Cow :: Borrowed ("p") , alloc :: borrow :: Cow :: Borrowed ("t") , alloc :: borrow :: Cow :: Borrowed ("s") , alloc :: borrow :: Cow :: Borrowed ("훾") , alloc :: borrow :: Cow :: Borrowed ("p") , alloc :: borrow :: Cow :: Borrowed ("s") ,] ,) , short : Some (:: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("ned.") , alloc :: borrow :: Cow :: Borrowed ("pon.") , alloc :: borrow :: Cow :: Borrowed ("tor.") , alloc :: borrow :: Cow :: Borrowed ("sre.") , alloc :: borrow :: Cow :: Borrowed ("훾et.") , alloc :: borrow :: Cow :: Borrowed ("pet.") , alloc :: borrow :: Cow :: Borrowed ("sob.") ,] ,)) , wide : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("nedelja") , alloc :: borrow :: Cow :: Borrowed ("ponedeljek") , alloc :: borrow :: Cow :: Borrowed ("torek") , alloc :: borrow :: Cow :: Borrowed ("sreda") , alloc :: borrow :: Cow :: Borrowed ("훾etrtek") , alloc :: borrow :: Cow :: Borrowed ("petek") , alloc :: borrow :: Cow :: Borrowed ("sobota") ,] ,) , } , stand_alone : None , } , eras : :: icu::datetime :: provider :: calendar :: Eras { names : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x03\0\x05\0\x0B\0\x10\0\x15\0\x1A\0bceceheiseimeijireiwashowataisho") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x0E\0\x19\0\x1F\0$\0)\0/\0pred Kristusompo KristusuHeiseiMeijiReiwaSh\xC5\x8DwaTaish\xC5\x8D") }) } , abbr : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x03\0\x05\0\x0B\0\x10\0\x15\0\x1A\0bceceheiseimeijireiwashowataisho") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x07\0\r\0\x13\0\x18\0\x1D\0#\0pr. Kr.po Kr.HeiseiMeijiReiwaSh\xC5\x8DwaTaish\xC5\x8D") }) } , narrow : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x03\0\x05\0\x0B\0\x10\0\x15\0\x1A\0bceceheiseimeijireiwashowataisho") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x07\0\0\0\0\0\x07\0\r\0\x0E\0\x0F\0\x10\0\x11\0pr. Kr.po Kr.HMRST") }) } , } , }