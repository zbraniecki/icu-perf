:: icu::datetime :: provider :: calendar :: DateSymbolsV1 { months : :: icu::datetime :: provider :: calendar :: months :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: months :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("Jan.") , alloc :: borrow :: Cow :: Borrowed ("Feb.") , alloc :: borrow :: Cow :: Borrowed ("Mrt.") , alloc :: borrow :: Cow :: Borrowed ("Apr.") , alloc :: borrow :: Cow :: Borrowed ("Mei") , alloc :: borrow :: Cow :: Borrowed ("Jun.") , alloc :: borrow :: Cow :: Borrowed ("Jul.") , alloc :: borrow :: Cow :: Borrowed ("Aug.") , alloc :: borrow :: Cow :: Borrowed ("Sep.") , alloc :: borrow :: Cow :: Borrowed ("Okt.") , alloc :: borrow :: Cow :: Borrowed ("Nov.") , alloc :: borrow :: Cow :: Borrowed ("Des.") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("F") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("A") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("A") , alloc :: borrow :: Cow :: Borrowed ("S") , alloc :: borrow :: Cow :: Borrowed ("O") , alloc :: borrow :: Cow :: Borrowed ("N") , alloc :: borrow :: Cow :: Borrowed ("D") ,] ,) , short : None , wide : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("Januarie") , alloc :: borrow :: Cow :: Borrowed ("Februarie") , alloc :: borrow :: Cow :: Borrowed ("Maart") , alloc :: borrow :: Cow :: Borrowed ("April") , alloc :: borrow :: Cow :: Borrowed ("Mei") , alloc :: borrow :: Cow :: Borrowed ("Junie") , alloc :: borrow :: Cow :: Borrowed ("Julie") , alloc :: borrow :: Cow :: Borrowed ("Augustus") , alloc :: borrow :: Cow :: Borrowed ("September") , alloc :: borrow :: Cow :: Borrowed ("Oktober") , alloc :: borrow :: Cow :: Borrowed ("November") , alloc :: borrow :: Cow :: Borrowed ("Desember") ,] ,) , } , stand_alone : None , } , weekdays : :: icu::datetime :: provider :: calendar :: weekdays :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: weekdays :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("So.") , alloc :: borrow :: Cow :: Borrowed ("Ma.") , alloc :: borrow :: Cow :: Borrowed ("Di.") , alloc :: borrow :: Cow :: Borrowed ("Wo.") , alloc :: borrow :: Cow :: Borrowed ("Do.") , alloc :: borrow :: Cow :: Borrowed ("Vr.") , alloc :: borrow :: Cow :: Borrowed ("Sa.") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("S") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("D") , alloc :: borrow :: Cow :: Borrowed ("W") , alloc :: borrow :: Cow :: Borrowed ("D") , alloc :: borrow :: Cow :: Borrowed ("V") , alloc :: borrow :: Cow :: Borrowed ("S") ,] ,) , short : Some (:: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("So.") , alloc :: borrow :: Cow :: Borrowed ("Ma.") , alloc :: borrow :: Cow :: Borrowed ("Di.") , alloc :: borrow :: Cow :: Borrowed ("Wo.") , alloc :: borrow :: Cow :: Borrowed ("Do.") , alloc :: borrow :: Cow :: Borrowed ("Vr.") , alloc :: borrow :: Cow :: Borrowed ("Sa.") ,] ,)) , wide : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("Sondag") , alloc :: borrow :: Cow :: Borrowed ("Maandag") , alloc :: borrow :: Cow :: Borrowed ("Dinsdag") , alloc :: borrow :: Cow :: Borrowed ("Woensdag") , alloc :: borrow :: Cow :: Borrowed ("Donderdag") , alloc :: borrow :: Cow :: Borrowed ("Vrydag") , alloc :: borrow :: Cow :: Borrowed ("Saterdag") ,] ,) , } , stand_alone : None , } , eras : :: icu::datetime :: provider :: calendar :: Eras { names : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0be") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0BE") }) } , abbr : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0be") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0BE") }) } , narrow : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0be") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0BE") }) } , } , }