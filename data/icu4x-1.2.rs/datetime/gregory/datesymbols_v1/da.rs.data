:: icu::datetime :: provider :: calendar :: DateSymbolsV1 { months : :: icu::datetime :: provider :: calendar :: months :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: months :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("jan.") , alloc :: borrow :: Cow :: Borrowed ("feb.") , alloc :: borrow :: Cow :: Borrowed ("mar.") , alloc :: borrow :: Cow :: Borrowed ("apr.") , alloc :: borrow :: Cow :: Borrowed ("maj") , alloc :: borrow :: Cow :: Borrowed ("jun.") , alloc :: borrow :: Cow :: Borrowed ("jul.") , alloc :: borrow :: Cow :: Borrowed ("aug.") , alloc :: borrow :: Cow :: Borrowed ("sep.") , alloc :: borrow :: Cow :: Borrowed ("okt.") , alloc :: borrow :: Cow :: Borrowed ("nov.") , alloc :: borrow :: Cow :: Borrowed ("dec.") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("F") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("A") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("J") , alloc :: borrow :: Cow :: Borrowed ("A") , alloc :: borrow :: Cow :: Borrowed ("S") , alloc :: borrow :: Cow :: Borrowed ("O") , alloc :: borrow :: Cow :: Borrowed ("N") , alloc :: borrow :: Cow :: Borrowed ("D") ,] ,) , short : None , wide : :: icu::datetime :: provider :: calendar :: months :: SymbolsV1 :: SolarTwelve ([alloc :: borrow :: Cow :: Borrowed ("januar") , alloc :: borrow :: Cow :: Borrowed ("februar") , alloc :: borrow :: Cow :: Borrowed ("marts") , alloc :: borrow :: Cow :: Borrowed ("april") , alloc :: borrow :: Cow :: Borrowed ("maj") , alloc :: borrow :: Cow :: Borrowed ("juni") , alloc :: borrow :: Cow :: Borrowed ("juli") , alloc :: borrow :: Cow :: Borrowed ("august") , alloc :: borrow :: Cow :: Borrowed ("september") , alloc :: borrow :: Cow :: Borrowed ("oktober") , alloc :: borrow :: Cow :: Borrowed ("november") , alloc :: borrow :: Cow :: Borrowed ("december") ,] ,) , } , stand_alone : None , } , weekdays : :: icu::datetime :: provider :: calendar :: weekdays :: ContextsV1 { format : :: icu::datetime :: provider :: calendar :: weekdays :: FormatWidthsV1 { abbreviated : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("søn.") , alloc :: borrow :: Cow :: Borrowed ("man.") , alloc :: borrow :: Cow :: Borrowed ("tirs.") , alloc :: borrow :: Cow :: Borrowed ("ons.") , alloc :: borrow :: Cow :: Borrowed ("tors.") , alloc :: borrow :: Cow :: Borrowed ("fre.") , alloc :: borrow :: Cow :: Borrowed ("lør.") ,] ,) , narrow : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("S") , alloc :: borrow :: Cow :: Borrowed ("M") , alloc :: borrow :: Cow :: Borrowed ("T") , alloc :: borrow :: Cow :: Borrowed ("O") , alloc :: borrow :: Cow :: Borrowed ("T") , alloc :: borrow :: Cow :: Borrowed ("F") , alloc :: borrow :: Cow :: Borrowed ("L") ,] ,) , short : Some (:: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("sø.") , alloc :: borrow :: Cow :: Borrowed ("ma.") , alloc :: borrow :: Cow :: Borrowed ("ti.") , alloc :: borrow :: Cow :: Borrowed ("on.") , alloc :: borrow :: Cow :: Borrowed ("to.") , alloc :: borrow :: Cow :: Borrowed ("fr.") , alloc :: borrow :: Cow :: Borrowed ("lø.") ,] ,)) , wide : :: icu::datetime :: provider :: calendar :: weekdays :: SymbolsV1 ([alloc :: borrow :: Cow :: Borrowed ("søndag") , alloc :: borrow :: Cow :: Borrowed ("mandag") , alloc :: borrow :: Cow :: Borrowed ("tirsdag") , alloc :: borrow :: Cow :: Borrowed ("onsdag") , alloc :: borrow :: Cow :: Borrowed ("torsdag") , alloc :: borrow :: Cow :: Borrowed ("fredag") , alloc :: borrow :: Cow :: Borrowed ("lørdag") ,] ,) , } , stand_alone : None , } , eras : :: icu::datetime :: provider :: calendar :: Eras { names : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x03\0bcece") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x0C\0f\xC3\xB8r Kristusefter Kristus") }) } , abbr : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x03\0bcece") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x05\0f.Kr.e.Kr.") }) } , narrow : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x03\0bcece") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x02\0\0\0\0\0\x03\0fKreKr") }) } , } , }