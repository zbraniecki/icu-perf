// @generated
# ! [allow (clippy :: octal_escapes)] type DataStruct = < :: icu::decimal :: provider :: DecimalSymbolsV1Marker as :: icu_provider :: DataMarker > :: Yokeable ; pub fn lookup (locale : & icu_provider :: DataLocale) -> Option < & 'static DataStruct > { static KEYS : [& str ; 121usize] = ["af" , "am" , "ar" , "ar-u-nu-latn" , "as" , "as-u-nu-latn" , "az" , "be" , "bg" , "bn" , "bn-u-nu-latn" , "bs" , "ca" , "cs" , "cy" , "da" , "de" , "el" , "en" , "es" , "et" , "eu" , "fa" , "fa-u-nu-latn" , "fi" , "fil" , "fr" , "ga" , "gd" , "gl" , "gu" , "gu-u-nu-gujr" , "ha" , "he" , "hi" , "hi-Latn" , "hi-u-nu-deva" , "hr" , "hu" , "hy" , "id" , "ig" , "is" , "it" , "ja" , "jv" , "jv-u-nu-java" , "ka" , "kk" , "km" , "km-u-nu-khmr" , "kn" , "kn-u-nu-knda" , "ko" , "kok" , "kok-u-nu-deva" , "ky" , "lo" , "lo-u-nu-laoo" , "lt" , "lv" , "mk" , "ml" , "ml-u-nu-mlym" , "mn" , "mr" , "mr-u-nu-latn" , "ms" , "my" , "my-u-nu-latn" , "ne" , "ne-u-nu-latn" , "nl" , "nn" , "no" , "or" , "or-u-nu-orya" , "pa" , "pa-u-nu-guru" , "pcm" , "pl" , "ps" , "ps-u-nu-latn" , "pt" , "ro" , "ru" , "sd" , "sd-u-nu-latn" , "si" , "sk" , "sl" , "so" , "sq" , "sr" , "sr-Latn" , "sv" , "sw" , "ta" , "ta-u-nu-tamldec" , "te" , "te-u-nu-telu" , "th" , "th-u-nu-thai" , "tk" , "tr" , "uk" , "und" , "ur" , "ur-u-nu-arabext" , "uz" , "vi" , "yo" , "yue" , "yue-Hans" , "yue-Hans-u-nu-hanidec" , "yue-u-nu-hanidec" , "zh" , "zh-Hant" , "zh-Hant-u-nu-hanidec" , "zh-u-nu-hanidec" , "zu"] ; static DATA : [& DataStruct ; 121usize] = [& AF , & AM , & AR , & AR_U_NU_LATN , & AS , & AS_U_NU_LATN , & AZ , & BE , & BE , & AS , & AS_U_NU_LATN , & AZ , & AZ , & AF , & AM , & AZ , & AZ , & AZ , & AM , & ES , & ET , & EU , & FA , & FA_U_NU_LATN , & FI , & AM , & FR , & AM , & AM , & AZ , & AS_U_NU_LATN , & GU_U_NU_GUJR , & AM , & AR_U_NU_LATN , & AS_U_NU_LATN , & AS_U_NU_LATN , & HI_U_NU_DEVA , & EU , & AF , & AF , & AZ , & AM , & AZ , & AZ , & AM , & AZ , & JV_U_NU_JAVA , & BE , & AF , & AZ , & KM_U_NU_KHMR , & AM , & KN_U_NU_KNDA , & AM , & AM , & KOK_U_NU_DEVA , & AF , & AZ , & LO_U_NU_LAOO , & FI , & BE , & AZ , & AS_U_NU_LATN , & ML_U_NU_MLYM , & AM , & HI_U_NU_DEVA , & AS_U_NU_LATN , & AM , & MY , & AM , & HI_U_NU_DEVA , & AS_U_NU_LATN , & AZ , & FI , & FI , & AS_U_NU_LATN , & OR_U_NU_ORYA , & AS_U_NU_LATN , & PA_U_NU_GURU , & AM , & BE , & PS , & PS_U_NU_LATN , & AZ , & AZ , & AF , & AR , & AM , & AM , & AF , & EU , & AM , & BE , & AZ , & AZ , & FI , & AM , & AS_U_NU_LATN , & TA_U_NU_TAMLDEC , & AS_U_NU_LATN , & TE_U_NU_TELU , & AM , & TH_U_NU_THAI , & AF , & AZ , & AF , & AM , & AR_U_NU_LATN , & PS , & AF , & AZ , & AM , & AM , & AM , & YUE_HANS_U_NU_HANIDEC , & YUE_HANS_U_NU_HANIDEC , & AM , & AM , & YUE_HANS_U_NU_HANIDEC , & YUE_HANS_U_NU_HANIDEC , & AM] ; KEYS . binary_search_by (| k | locale . strict_cmp (k . as_bytes ()) . reverse ()) . ok () . map (| i | unsafe { * DATA . get_unchecked (i) }) } static AF : DataStruct = include ! ("af.rs.data") ; static AM : DataStruct = include ! ("am.rs.data") ; static AR_U_NU_LATN : DataStruct = include ! ("ar-u-nu-latn.rs.data") ; static AR : DataStruct = include ! ("ar.rs.data") ; static AS_U_NU_LATN : DataStruct = include ! ("as-u-nu-latn.rs.data") ; static AS : DataStruct = include ! ("as.rs.data") ; static AZ : DataStruct = include ! ("az.rs.data") ; static BE : DataStruct = include ! ("be.rs.data") ; static ES : DataStruct = include ! ("es.rs.data") ; static ET : DataStruct = include ! ("et.rs.data") ; static EU : DataStruct = include ! ("eu.rs.data") ; static FA_U_NU_LATN : DataStruct = include ! ("fa-u-nu-latn.rs.data") ; static FA : DataStruct = include ! ("fa.rs.data") ; static FI : DataStruct = include ! ("fi.rs.data") ; static FR : DataStruct = include ! ("fr.rs.data") ; static GU_U_NU_GUJR : DataStruct = include ! ("gu-u-nu-gujr.rs.data") ; static HI_U_NU_DEVA : DataStruct = include ! ("hi-u-nu-deva.rs.data") ; static JV_U_NU_JAVA : DataStruct = include ! ("jv-u-nu-java.rs.data") ; static KM_U_NU_KHMR : DataStruct = include ! ("km-u-nu-khmr.rs.data") ; static KN_U_NU_KNDA : DataStruct = include ! ("kn-u-nu-knda.rs.data") ; static KOK_U_NU_DEVA : DataStruct = include ! ("kok-u-nu-deva.rs.data") ; static LO_U_NU_LAOO : DataStruct = include ! ("lo-u-nu-laoo.rs.data") ; static ML_U_NU_MLYM : DataStruct = include ! ("ml-u-nu-mlym.rs.data") ; static MY : DataStruct = include ! ("my.rs.data") ; static OR_U_NU_ORYA : DataStruct = include ! ("or-u-nu-orya.rs.data") ; static PA_U_NU_GURU : DataStruct = include ! ("pa-u-nu-guru.rs.data") ; static PS_U_NU_LATN : DataStruct = include ! ("ps-u-nu-latn.rs.data") ; static PS : DataStruct = include ! ("ps.rs.data") ; static TA_U_NU_TAMLDEC : DataStruct = include ! ("ta-u-nu-tamldec.rs.data") ; static TE_U_NU_TELU : DataStruct = include ! ("te-u-nu-telu.rs.data") ; static TH_U_NU_THAI : DataStruct = include ! ("th-u-nu-thai.rs.data") ; static YUE_HANS_U_NU_HANIDEC : DataStruct = include ! ("yue-Hans-u-nu-hanidec.rs.data") ;