:: icu::relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFE\xFF\0\x01\x02") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x05\0\0\0\0\0\x0F\0\x19\0!\0)\0\xD0\xBE\xD0\xBD\xD0\xB7\xD0\xB8 \xD0\xB4\xD0\xB5\xD0\xBD\xD0\xB2\xD1\x87\xD0\xB5\xD1\x80\xD0\xB0\xD0\xB4\xD0\xBD\xD0\xB5\xD1\x81\xD1\x83\xD1\x82\xD1\x80\xD0\xB5\xD0\xB2\xD0\xB4\xD1\x80\xD1\x83\xD0\xB3\xD0\xB8\xD0\xB4\xD0\xB5\xD0\xBD") }) } , past : :: icu::relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("пр.  д") , index : 6u8 , }) , two : None , few : None , many : None , other : :: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("пр.  д") , index : 6u8 , } , } , future : :: icu::relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("сл.  д") , index : 6u8 , }) , two : None , few : None , many : None , other : :: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("сл.  д") , index : 6u8 , } , } , }