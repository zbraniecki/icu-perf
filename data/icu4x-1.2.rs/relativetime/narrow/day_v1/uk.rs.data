:: icu::relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (b"\xFE\xFF\0\x01\x02") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x05\0\0\0\0\0\x12\0\x1C\0,\08\0\xD0\xBF\xD0\xBE\xD0\xB7\xD0\xB0\xD0\xB2\xD1\x87\xD0\xBE\xD1\x80\xD0\xB0\xD1\x83\xD1\x87\xD0\xBE\xD1\x80\xD0\xB0\xD1\x81\xD1\x8C\xD0\xBE\xD0\xB3\xD0\xBE\xD0\xB4\xD0\xBD\xD1\x96\xD0\xB7\xD0\xB0\xD0\xB2\xD1\x82\xD1\x80\xD0\xB0\xD0\xBF\xD1\x96\xD1\x81\xD0\xBB\xD1\x8F\xD0\xB7\xD0\xB0\xD0\xB2\xD1\x82\xD1\x80\xD0\xB0") }) } , past : :: icu::relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" дн. тому") , index : 0u8 , }) , two : None , few : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" дн. тому") , index : 0u8 , }) , many : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" дн. тому") , index : 0u8 , }) , other : :: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" дн. тому") , index : 0u8 , } , } , future : :: icu::relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("за  д.") , index : 5u8 , }) , two : None , few : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("за  д.") , index : 5u8 , }) , many : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("за  д.") , index : 5u8 , }) , other : :: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("за  д.") , index : 5u8 , } , } , }