:: icu::relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (b"\0") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0an-dr\xC3\xA0sta") }) } , past : :: icu::relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("o  diog") , index : 2u8 , }) , two : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("o  dhiog") , index : 2u8 , }) , few : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("o  diog.") , index : 2u8 , }) , many : None , other : :: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("o  diog") , index : 2u8 , } , } , future : :: icu::relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("an  diog") , index : 3u8 , }) , two : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("an  dhiog") , index : 3u8 , }) , few : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("an  diog.") , index : 3u8 , }) , many : None , other : :: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("an  diog") , index : 3u8 , } , } , }