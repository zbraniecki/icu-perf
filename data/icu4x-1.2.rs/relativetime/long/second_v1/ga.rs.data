:: icu::relativetime :: provider :: RelativeTimePatternDataV1 { relatives : unsafe { # [allow (unused_unsafe)] :: zerovec :: ZeroMap :: from_parts_unchecked (unsafe { :: zerovec :: ZeroVec :: from_bytes_unchecked (b"\0") } , unsafe { :: zerovec :: VarZeroVec :: from_bytes_unchecked (b"\x01\0\0\0\0\0anois") }) } , past : :: icu::relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" soicind ó shin") , index : 0u8 , }) , two : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" shoicind ó shin") , index : 0u8 , }) , few : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" shoicind ó shin") , index : 0u8 , }) , many : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" soicind ó shin") , index : 0u8 , }) , other : :: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed (" soicind ó shin") , index : 0u8 , } , } , future : :: icu::relativetime :: provider :: PluralRulesCategoryMapping { zero : None , one : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("i gceann  soicind") , index : 9u8 , }) , two : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("i gceann  shoicind") , index : 9u8 , }) , few : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("i gceann  shoicind") , index : 9u8 , }) , many : Some (:: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("i gceann  soicind") , index : 9u8 , }) , other : :: icu::relativetime :: provider :: SingularSubPattern { pattern : alloc :: borrow :: Cow :: Borrowed ("i gceann  soicind") , index : 9u8 , } , } , }